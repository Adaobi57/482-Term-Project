<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20242.24.0711.1636                               -->
<workbook original-version='18.1' source-build='2024.2.1 (20242.24.0711.1636)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Monthly average retail prices for selected products- Food_clean' inline='true' name='federated.1oqgssu19p11sn19fv0mc0g99tfr' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Monthly average retail prices for selected products- Food_clean' name='textscan.05vgtdf1eeemxd15sotq41og47mu'>
            <connection class='textscan' directory='C:/Users/x2023gbn/OneDrive - St. Francis Xavier University/Winter 2025/BSAD 482/Term Project/Data Sets/Statistics Canada/Food' filename='Monthly average retail prices for selected products- Food_clean.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Pivot' type='pivot'>
          <columns>
            <column datatype='date' date-parse-format='yy-MMM' name='Pivot Field Names' />
            <column datatype='real' name='Pivot Field Values' />
          </columns>
          <tag name='Pivot Field Names'>
            <value name='[17-Apr]' />
            <value name='[17-Aug]' />
            <value name='[17-Dec]' />
            <value name='[17-Feb]' />
            <value name='[17-Jan]' />
            <value name='[17-Jul]' />
            <value name='[17-Jun]' />
            <value name='[17-Mar]' />
            <value name='[17-May]' />
            <value name='[17-Nov]' />
            <value name='[17-Oct]' />
            <value name='[17-Sep]' />
            <value name='[18-Apr]' />
            <value name='[18-Aug]' />
            <value name='[18-Dec]' />
            <value name='[18-Feb]' />
            <value name='[18-Jan]' />
            <value name='[18-Jul]' />
            <value name='[18-Jun]' />
            <value name='[18-Mar]' />
            <value name='[18-May]' />
            <value name='[18-Nov]' />
            <value name='[18-Oct]' />
            <value name='[18-Sep]' />
            <value name='[19-Apr]' />
            <value name='[19-Aug]' />
            <value name='[19-Dec]' />
            <value name='[19-Feb]' />
            <value name='[19-Jan]' />
            <value name='[19-Jul]' />
            <value name='[19-Jun]' />
            <value name='[19-Mar]' />
            <value name='[19-May]' />
            <value name='[19-Nov]' />
            <value name='[19-Oct]' />
            <value name='[19-Sep]' />
            <value name='[20-Apr]' />
            <value name='[20-Aug]' />
            <value name='[20-Dec]' />
            <value name='[20-Feb]' />
            <value name='[20-Jan]' />
            <value name='[20-Jul]' />
            <value name='[20-Jun]' />
            <value name='[20-Mar]' />
            <value name='[20-May]' />
            <value name='[20-Nov]' />
            <value name='[20-Oct]' />
            <value name='[20-Sep]' />
            <value name='[21-Apr]' />
            <value name='[21-Aug]' />
            <value name='[21-Dec]' />
            <value name='[21-Feb]' />
            <value name='[21-Jan]' />
            <value name='[21-Jul]' />
            <value name='[21-Jun]' />
            <value name='[21-Mar]' />
            <value name='[21-May]' />
            <value name='[21-Nov]' />
            <value name='[21-Oct]' />
            <value name='[21-Sep]' />
            <value name='[22-Apr]' />
            <value name='[22-Aug]' />
            <value name='[22-Dec]' />
            <value name='[22-Feb]' />
            <value name='[22-Jan]' />
            <value name='[22-Jul]' />
            <value name='[22-Jun]' />
            <value name='[22-Mar]' />
            <value name='[22-May]' />
            <value name='[22-Nov]' />
            <value name='[22-Oct]' />
            <value name='[22-Sep]' />
            <value name='[23-Apr]' />
            <value name='[23-Aug]' />
            <value name='[23-Dec]' />
            <value name='[23-Feb]' />
            <value name='[23-Jan]' />
            <value name='[23-Jul]' />
            <value name='[23-Jun]' />
            <value name='[23-Mar]' />
            <value name='[23-May]' />
            <value name='[23-Nov]' />
            <value name='[23-Oct]' />
            <value name='[23-Sep]' />
            <value name='[24-Apr]' />
            <value name='[24-Aug]' />
            <value name='[24-Dec]' />
            <value name='[24-Feb]' />
            <value name='[24-Jan]' />
            <value name='[24-Jul]' />
            <value name='[24-Jun]' />
            <value name='[24-Mar]' />
            <value name='[24-May]' />
            <value name='[24-Nov]' />
            <value name='[24-Oct]' />
            <value name='[24-Sep]' />
          </tag>
          <groups>
            <group name='Pivot Field Values'>
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[17-Apr]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[17-Aug]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[17-Dec]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[17-Feb]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[17-Jan]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[17-Jul]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[17-Jun]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[17-Mar]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[17-May]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[17-Nov]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[17-Oct]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[17-Sep]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[18-Apr]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[18-Aug]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[18-Dec]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[18-Feb]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[18-Jan]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[18-Jul]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[18-Jun]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[18-Mar]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[18-May]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[18-Nov]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[18-Oct]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[18-Sep]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[19-Apr]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[19-Aug]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[19-Dec]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[19-Feb]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[19-Jan]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[19-Jul]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[19-Jun]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[19-Mar]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[19-May]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[19-Nov]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[19-Oct]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[19-Sep]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[20-Apr]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[20-Aug]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[20-Dec]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[20-Feb]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[20-Jan]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[20-Jul]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[20-Jun]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[20-Mar]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[20-May]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[20-Nov]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[20-Oct]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[20-Sep]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[21-Apr]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[21-Aug]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[21-Dec]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[21-Feb]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[21-Jan]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[21-Jul]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[21-Jun]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[21-Mar]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[21-May]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[21-Nov]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[21-Oct]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[21-Sep]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[22-Apr]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[22-Aug]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[22-Dec]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[22-Feb]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[22-Jan]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[22-Jul]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[22-Jun]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[22-Mar]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[22-May]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[22-Nov]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[22-Oct]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[22-Sep]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[23-Apr]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[23-Aug]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[23-Dec]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[23-Feb]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[23-Jan]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[23-Jul]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[23-Jun]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[23-Mar]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[23-May]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[23-Nov]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[23-Oct]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[23-Sep]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[24-Apr]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[24-Aug]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[24-Dec]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[24-Feb]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[24-Jan]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[24-Jul]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[24-Jun]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[24-Mar]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[24-May]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[24-Nov]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[24-Oct]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[24-Sep]' />
            </group>
          </groups>
          <relation connection='textscan.05vgtdf1eeemxd15sotq41og47mu' name='Monthly average retail prices for selected products- Food_clean.csv' table='[Monthly average retail prices for selected products- Food_clean#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='Products' ordinal='0' />
              <column datatype='real' name='17-Jan' ordinal='1' />
              <column datatype='real' name='17-Feb' ordinal='2' />
              <column datatype='real' name='17-Mar' ordinal='3' />
              <column datatype='real' name='17-Apr' ordinal='4' />
              <column datatype='real' name='17-May' ordinal='5' />
              <column datatype='real' name='17-Jun' ordinal='6' />
              <column datatype='real' name='17-Jul' ordinal='7' />
              <column datatype='real' name='17-Aug' ordinal='8' />
              <column datatype='real' name='17-Sep' ordinal='9' />
              <column datatype='real' name='17-Oct' ordinal='10' />
              <column datatype='real' name='17-Nov' ordinal='11' />
              <column datatype='real' name='17-Dec' ordinal='12' />
              <column datatype='real' name='18-Jan' ordinal='13' />
              <column datatype='real' name='18-Feb' ordinal='14' />
              <column datatype='real' name='18-Mar' ordinal='15' />
              <column datatype='real' name='18-Apr' ordinal='16' />
              <column datatype='real' name='18-May' ordinal='17' />
              <column datatype='real' name='18-Jun' ordinal='18' />
              <column datatype='real' name='18-Jul' ordinal='19' />
              <column datatype='real' name='18-Aug' ordinal='20' />
              <column datatype='real' name='18-Sep' ordinal='21' />
              <column datatype='real' name='18-Oct' ordinal='22' />
              <column datatype='real' name='18-Nov' ordinal='23' />
              <column datatype='real' name='18-Dec' ordinal='24' />
              <column datatype='real' name='19-Jan' ordinal='25' />
              <column datatype='real' name='19-Feb' ordinal='26' />
              <column datatype='real' name='19-Mar' ordinal='27' />
              <column datatype='real' name='19-Apr' ordinal='28' />
              <column datatype='real' name='19-May' ordinal='29' />
              <column datatype='real' name='19-Jun' ordinal='30' />
              <column datatype='real' name='19-Jul' ordinal='31' />
              <column datatype='real' name='19-Aug' ordinal='32' />
              <column datatype='real' name='19-Sep' ordinal='33' />
              <column datatype='real' name='19-Oct' ordinal='34' />
              <column datatype='real' name='19-Nov' ordinal='35' />
              <column datatype='real' name='19-Dec' ordinal='36' />
              <column datatype='real' name='20-Jan' ordinal='37' />
              <column datatype='real' name='20-Feb' ordinal='38' />
              <column datatype='real' name='20-Mar' ordinal='39' />
              <column datatype='real' name='20-Apr' ordinal='40' />
              <column datatype='real' name='20-May' ordinal='41' />
              <column datatype='real' name='20-Jun' ordinal='42' />
              <column datatype='real' name='20-Jul' ordinal='43' />
              <column datatype='real' name='20-Aug' ordinal='44' />
              <column datatype='real' name='20-Sep' ordinal='45' />
              <column datatype='real' name='20-Oct' ordinal='46' />
              <column datatype='real' name='20-Nov' ordinal='47' />
              <column datatype='real' name='20-Dec' ordinal='48' />
              <column datatype='real' name='21-Jan' ordinal='49' />
              <column datatype='real' name='21-Feb' ordinal='50' />
              <column datatype='real' name='21-Mar' ordinal='51' />
              <column datatype='real' name='21-Apr' ordinal='52' />
              <column datatype='real' name='21-May' ordinal='53' />
              <column datatype='real' name='21-Jun' ordinal='54' />
              <column datatype='real' name='21-Jul' ordinal='55' />
              <column datatype='real' name='21-Aug' ordinal='56' />
              <column datatype='real' name='21-Sep' ordinal='57' />
              <column datatype='real' name='21-Oct' ordinal='58' />
              <column datatype='real' name='21-Nov' ordinal='59' />
              <column datatype='real' name='21-Dec' ordinal='60' />
              <column datatype='real' name='22-Jan' ordinal='61' />
              <column datatype='real' name='22-Feb' ordinal='62' />
              <column datatype='real' name='22-Mar' ordinal='63' />
              <column datatype='real' name='22-Apr' ordinal='64' />
              <column datatype='real' name='22-May' ordinal='65' />
              <column datatype='real' name='22-Jun' ordinal='66' />
              <column datatype='real' name='22-Jul' ordinal='67' />
              <column datatype='real' name='22-Aug' ordinal='68' />
              <column datatype='real' name='22-Sep' ordinal='69' />
              <column datatype='real' name='22-Oct' ordinal='70' />
              <column datatype='real' name='22-Nov' ordinal='71' />
              <column datatype='real' name='22-Dec' ordinal='72' />
              <column datatype='real' name='23-Jan' ordinal='73' />
              <column datatype='real' name='23-Feb' ordinal='74' />
              <column datatype='real' name='23-Mar' ordinal='75' />
              <column datatype='real' name='23-Apr' ordinal='76' />
              <column datatype='real' name='23-May' ordinal='77' />
              <column datatype='real' name='23-Jun' ordinal='78' />
              <column datatype='real' name='23-Jul' ordinal='79' />
              <column datatype='real' name='23-Aug' ordinal='80' />
              <column datatype='real' name='23-Sep' ordinal='81' />
              <column datatype='real' name='23-Oct' ordinal='82' />
              <column datatype='real' name='23-Nov' ordinal='83' />
              <column datatype='real' name='23-Dec' ordinal='84' />
              <column datatype='real' name='24-Jan' ordinal='85' />
              <column datatype='real' name='24-Feb' ordinal='86' />
              <column datatype='real' name='24-Mar' ordinal='87' />
              <column datatype='real' name='24-Apr' ordinal='88' />
              <column datatype='real' name='24-May' ordinal='89' />
              <column datatype='real' name='24-Jun' ordinal='90' />
              <column datatype='real' name='24-Jul' ordinal='91' />
              <column datatype='real' name='24-Aug' ordinal='92' />
              <column datatype='real' name='24-Sep' ordinal='93' />
              <column datatype='real' name='24-Oct' ordinal='94' />
              <column datatype='real' name='24-Nov' ordinal='95' />
              <column datatype='real' name='24-Dec' ordinal='96' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Pivot' type='pivot'>
          <columns>
            <column datatype='date' date-parse-format='yy-MMM' name='Pivot Field Names' />
            <column datatype='real' name='Pivot Field Values' />
          </columns>
          <tag name='Pivot Field Names'>
            <value name='[17-Apr]' />
            <value name='[17-Aug]' />
            <value name='[17-Dec]' />
            <value name='[17-Feb]' />
            <value name='[17-Jan]' />
            <value name='[17-Jul]' />
            <value name='[17-Jun]' />
            <value name='[17-Mar]' />
            <value name='[17-May]' />
            <value name='[17-Nov]' />
            <value name='[17-Oct]' />
            <value name='[17-Sep]' />
            <value name='[18-Apr]' />
            <value name='[18-Aug]' />
            <value name='[18-Dec]' />
            <value name='[18-Feb]' />
            <value name='[18-Jan]' />
            <value name='[18-Jul]' />
            <value name='[18-Jun]' />
            <value name='[18-Mar]' />
            <value name='[18-May]' />
            <value name='[18-Nov]' />
            <value name='[18-Oct]' />
            <value name='[18-Sep]' />
            <value name='[19-Apr]' />
            <value name='[19-Aug]' />
            <value name='[19-Dec]' />
            <value name='[19-Feb]' />
            <value name='[19-Jan]' />
            <value name='[19-Jul]' />
            <value name='[19-Jun]' />
            <value name='[19-Mar]' />
            <value name='[19-May]' />
            <value name='[19-Nov]' />
            <value name='[19-Oct]' />
            <value name='[19-Sep]' />
            <value name='[20-Apr]' />
            <value name='[20-Aug]' />
            <value name='[20-Dec]' />
            <value name='[20-Feb]' />
            <value name='[20-Jan]' />
            <value name='[20-Jul]' />
            <value name='[20-Jun]' />
            <value name='[20-Mar]' />
            <value name='[20-May]' />
            <value name='[20-Nov]' />
            <value name='[20-Oct]' />
            <value name='[20-Sep]' />
            <value name='[21-Apr]' />
            <value name='[21-Aug]' />
            <value name='[21-Dec]' />
            <value name='[21-Feb]' />
            <value name='[21-Jan]' />
            <value name='[21-Jul]' />
            <value name='[21-Jun]' />
            <value name='[21-Mar]' />
            <value name='[21-May]' />
            <value name='[21-Nov]' />
            <value name='[21-Oct]' />
            <value name='[21-Sep]' />
            <value name='[22-Apr]' />
            <value name='[22-Aug]' />
            <value name='[22-Dec]' />
            <value name='[22-Feb]' />
            <value name='[22-Jan]' />
            <value name='[22-Jul]' />
            <value name='[22-Jun]' />
            <value name='[22-Mar]' />
            <value name='[22-May]' />
            <value name='[22-Nov]' />
            <value name='[22-Oct]' />
            <value name='[22-Sep]' />
            <value name='[23-Apr]' />
            <value name='[23-Aug]' />
            <value name='[23-Dec]' />
            <value name='[23-Feb]' />
            <value name='[23-Jan]' />
            <value name='[23-Jul]' />
            <value name='[23-Jun]' />
            <value name='[23-Mar]' />
            <value name='[23-May]' />
            <value name='[23-Nov]' />
            <value name='[23-Oct]' />
            <value name='[23-Sep]' />
            <value name='[24-Apr]' />
            <value name='[24-Aug]' />
            <value name='[24-Dec]' />
            <value name='[24-Feb]' />
            <value name='[24-Jan]' />
            <value name='[24-Jul]' />
            <value name='[24-Jun]' />
            <value name='[24-Mar]' />
            <value name='[24-May]' />
            <value name='[24-Nov]' />
            <value name='[24-Oct]' />
            <value name='[24-Sep]' />
          </tag>
          <groups>
            <group name='Pivot Field Values'>
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[17-Apr]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[17-Aug]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[17-Dec]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[17-Feb]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[17-Jan]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[17-Jul]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[17-Jun]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[17-Mar]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[17-May]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[17-Nov]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[17-Oct]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[17-Sep]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[18-Apr]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[18-Aug]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[18-Dec]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[18-Feb]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[18-Jan]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[18-Jul]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[18-Jun]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[18-Mar]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[18-May]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[18-Nov]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[18-Oct]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[18-Sep]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[19-Apr]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[19-Aug]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[19-Dec]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[19-Feb]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[19-Jan]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[19-Jul]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[19-Jun]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[19-Mar]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[19-May]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[19-Nov]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[19-Oct]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[19-Sep]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[20-Apr]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[20-Aug]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[20-Dec]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[20-Feb]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[20-Jan]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[20-Jul]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[20-Jun]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[20-Mar]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[20-May]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[20-Nov]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[20-Oct]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[20-Sep]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[21-Apr]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[21-Aug]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[21-Dec]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[21-Feb]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[21-Jan]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[21-Jul]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[21-Jun]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[21-Mar]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[21-May]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[21-Nov]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[21-Oct]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[21-Sep]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[22-Apr]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[22-Aug]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[22-Dec]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[22-Feb]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[22-Jan]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[22-Jul]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[22-Jun]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[22-Mar]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[22-May]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[22-Nov]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[22-Oct]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[22-Sep]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[23-Apr]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[23-Aug]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[23-Dec]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[23-Feb]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[23-Jan]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[23-Jul]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[23-Jun]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[23-Mar]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[23-May]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[23-Nov]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[23-Oct]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[23-Sep]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[24-Apr]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[24-Aug]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[24-Dec]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[24-Feb]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[24-Jan]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[24-Jul]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[24-Jun]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[24-Mar]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[24-May]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[24-Nov]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[24-Oct]' />
              <field name='[Monthly average retail prices for selected products- Food_clean.csv].[24-Sep]' />
            </group>
          </groups>
          <relation connection='textscan.05vgtdf1eeemxd15sotq41og47mu' name='Monthly average retail prices for selected products- Food_clean.csv' table='[Monthly average retail prices for selected products- Food_clean#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='Products' ordinal='0' />
              <column datatype='real' name='17-Jan' ordinal='1' />
              <column datatype='real' name='17-Feb' ordinal='2' />
              <column datatype='real' name='17-Mar' ordinal='3' />
              <column datatype='real' name='17-Apr' ordinal='4' />
              <column datatype='real' name='17-May' ordinal='5' />
              <column datatype='real' name='17-Jun' ordinal='6' />
              <column datatype='real' name='17-Jul' ordinal='7' />
              <column datatype='real' name='17-Aug' ordinal='8' />
              <column datatype='real' name='17-Sep' ordinal='9' />
              <column datatype='real' name='17-Oct' ordinal='10' />
              <column datatype='real' name='17-Nov' ordinal='11' />
              <column datatype='real' name='17-Dec' ordinal='12' />
              <column datatype='real' name='18-Jan' ordinal='13' />
              <column datatype='real' name='18-Feb' ordinal='14' />
              <column datatype='real' name='18-Mar' ordinal='15' />
              <column datatype='real' name='18-Apr' ordinal='16' />
              <column datatype='real' name='18-May' ordinal='17' />
              <column datatype='real' name='18-Jun' ordinal='18' />
              <column datatype='real' name='18-Jul' ordinal='19' />
              <column datatype='real' name='18-Aug' ordinal='20' />
              <column datatype='real' name='18-Sep' ordinal='21' />
              <column datatype='real' name='18-Oct' ordinal='22' />
              <column datatype='real' name='18-Nov' ordinal='23' />
              <column datatype='real' name='18-Dec' ordinal='24' />
              <column datatype='real' name='19-Jan' ordinal='25' />
              <column datatype='real' name='19-Feb' ordinal='26' />
              <column datatype='real' name='19-Mar' ordinal='27' />
              <column datatype='real' name='19-Apr' ordinal='28' />
              <column datatype='real' name='19-May' ordinal='29' />
              <column datatype='real' name='19-Jun' ordinal='30' />
              <column datatype='real' name='19-Jul' ordinal='31' />
              <column datatype='real' name='19-Aug' ordinal='32' />
              <column datatype='real' name='19-Sep' ordinal='33' />
              <column datatype='real' name='19-Oct' ordinal='34' />
              <column datatype='real' name='19-Nov' ordinal='35' />
              <column datatype='real' name='19-Dec' ordinal='36' />
              <column datatype='real' name='20-Jan' ordinal='37' />
              <column datatype='real' name='20-Feb' ordinal='38' />
              <column datatype='real' name='20-Mar' ordinal='39' />
              <column datatype='real' name='20-Apr' ordinal='40' />
              <column datatype='real' name='20-May' ordinal='41' />
              <column datatype='real' name='20-Jun' ordinal='42' />
              <column datatype='real' name='20-Jul' ordinal='43' />
              <column datatype='real' name='20-Aug' ordinal='44' />
              <column datatype='real' name='20-Sep' ordinal='45' />
              <column datatype='real' name='20-Oct' ordinal='46' />
              <column datatype='real' name='20-Nov' ordinal='47' />
              <column datatype='real' name='20-Dec' ordinal='48' />
              <column datatype='real' name='21-Jan' ordinal='49' />
              <column datatype='real' name='21-Feb' ordinal='50' />
              <column datatype='real' name='21-Mar' ordinal='51' />
              <column datatype='real' name='21-Apr' ordinal='52' />
              <column datatype='real' name='21-May' ordinal='53' />
              <column datatype='real' name='21-Jun' ordinal='54' />
              <column datatype='real' name='21-Jul' ordinal='55' />
              <column datatype='real' name='21-Aug' ordinal='56' />
              <column datatype='real' name='21-Sep' ordinal='57' />
              <column datatype='real' name='21-Oct' ordinal='58' />
              <column datatype='real' name='21-Nov' ordinal='59' />
              <column datatype='real' name='21-Dec' ordinal='60' />
              <column datatype='real' name='22-Jan' ordinal='61' />
              <column datatype='real' name='22-Feb' ordinal='62' />
              <column datatype='real' name='22-Mar' ordinal='63' />
              <column datatype='real' name='22-Apr' ordinal='64' />
              <column datatype='real' name='22-May' ordinal='65' />
              <column datatype='real' name='22-Jun' ordinal='66' />
              <column datatype='real' name='22-Jul' ordinal='67' />
              <column datatype='real' name='22-Aug' ordinal='68' />
              <column datatype='real' name='22-Sep' ordinal='69' />
              <column datatype='real' name='22-Oct' ordinal='70' />
              <column datatype='real' name='22-Nov' ordinal='71' />
              <column datatype='real' name='22-Dec' ordinal='72' />
              <column datatype='real' name='23-Jan' ordinal='73' />
              <column datatype='real' name='23-Feb' ordinal='74' />
              <column datatype='real' name='23-Mar' ordinal='75' />
              <column datatype='real' name='23-Apr' ordinal='76' />
              <column datatype='real' name='23-May' ordinal='77' />
              <column datatype='real' name='23-Jun' ordinal='78' />
              <column datatype='real' name='23-Jul' ordinal='79' />
              <column datatype='real' name='23-Aug' ordinal='80' />
              <column datatype='real' name='23-Sep' ordinal='81' />
              <column datatype='real' name='23-Oct' ordinal='82' />
              <column datatype='real' name='23-Nov' ordinal='83' />
              <column datatype='real' name='23-Dec' ordinal='84' />
              <column datatype='real' name='24-Jan' ordinal='85' />
              <column datatype='real' name='24-Feb' ordinal='86' />
              <column datatype='real' name='24-Mar' ordinal='87' />
              <column datatype='real' name='24-Apr' ordinal='88' />
              <column datatype='real' name='24-May' ordinal='89' />
              <column datatype='real' name='24-Jun' ordinal='90' />
              <column datatype='real' name='24-Jul' ordinal='91' />
              <column datatype='real' name='24-Aug' ordinal='92' />
              <column datatype='real' name='24-Sep' ordinal='93' />
              <column datatype='real' name='24-Oct' ordinal='94' />
              <column datatype='real' name='24-Nov' ordinal='95' />
              <column datatype='real' name='24-Dec' ordinal='96' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Monthly average retail prices for selected products- Food_clean.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Products</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Products]</local-name>
            <parent-name>[Monthly average retail prices for selected products- Food_clean.csv]</parent-name>
            <remote-alias>Products</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Monthly average retail prices for selected products- Food_clean.csv_1269F40AE76E4B5984B48843A812DB33]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Pivot Field Names</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Pivot Field Names]</local-name>
            <parent-name>[Pivot]</parent-name>
            <remote-alias>Pivot Field Names</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Monthly average retail prices for selected products- Food_clean.csv_1269F40AE76E4B5984B48843A812DB33]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Pivot Field Values</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Pivot Field Values]</local-name>
            <parent-name>[Pivot]</parent-name>
            <remote-alias>Pivot Field Values</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Monthly average retail prices for selected products- Food_clean.csv_1269F40AE76E4B5984B48843A812DB33]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Date' datatype='date' name='[Pivot Field Names]' role='dimension' type='ordinal' />
      <column caption='Monthly Retail Price' datatype='real' name='[Pivot Field Values]' role='measure' type='quantitative' />
      <column datatype='string' name='[Products]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Monthly average retail prices for selected products- Food_clean.csv' datatype='table' name='[__tableau_internal_object_id__].[Monthly average retail prices for selected products- Food_clean.csv_1269F40AE76E4B5984B48843A812DB33]' role='measure' type='quantitative' />
      <column-instance column='[Products]' derivation='None' name='[none:Products:nk]' pivot='key' type='nominal' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='false' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/x2023gbn/AppData/Local/Temp/TableauTemp/#TableauTemp_1bxhhgk0n6gjt71c6xodi1wvg4c0.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='03/07/2025 03:50:03 AM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Products</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Products]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Products</remote-alias>
              <ordinal>0</ordinal>
              <family>Monthly average retail prices for selected products- Food_clean.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>106</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Monthly average retail prices for selected products- Food_clean.csv_1269F40AE76E4B5984B48843A812DB33]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Pivot Field Names</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Pivot Field Names]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Pivot Field Names</remote-alias>
              <ordinal>1</ordinal>
              <family>Pivot</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>96</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Monthly average retail prices for selected products- Food_clean.csv_1269F40AE76E4B5984B48843A812DB33]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Pivot Field Values</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Pivot Field Values]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Pivot Field Values</remote-alias>
              <ordinal>2</ordinal>
              <family>Pivot</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1364</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Monthly average retail prices for selected products- Food_clean.csv_1269F40AE76E4B5984B48843A812DB33]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Products:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Beef stewing cuts, per kilogram 4&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Celery, unit 4&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Frozen pizza, 390 grams 5&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Onions, 1.36 kilograms 5&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Salsa, 418 millilitres 5&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Almonds, 200 grams 5&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Canned pear, 398 millilitres 5&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Eggs, 1 dozen 4&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mayonnaise, 890 millilitres  5&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Pork shoulder cuts, per kilogram 4&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;White bread, 675 grams 5&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Baby food, 128 millilitres 5&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Canned tuna, 170 grams 4&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Frozen french fried potatoes, 750 grams 5&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Milk, 4 litres 4&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Romaine lettuce, unit 4&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Wieners, 400 grams 5&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Broccoli, unit 4&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Chicken thigh, per kilogram 4&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ground beef, per kilogram 4&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Oranges, per kilogram 4&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Strawberries, 454 grams 5&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Beef striploin cuts, per kilogram 4&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cereal, 400 grams 5&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Frozen spinach, 300 grams 5&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Onions, per kilogram 4&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Shrimp, 300 grams 5&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bacon, 500 grams 5&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Canola oil, 3 litres 5&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Frozen green beans, 750 grams 5&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mushrooms, 227 grams 5&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Salad dressing, 475 millilitres 5&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Yogurt, 500 grams 5&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Canned corn, 341 millilitres 5&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Dry beans and legumes, 900 grams  5&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Limes, unit 4&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Pork loin cuts, per kilogram 4&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Vegetable oil, 3 litres 5&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Apple juice, 2 litres 5&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Canned salmon, 213 grams 5&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Flatbread and pita, 500 grams  5&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Meatless burgers, 226 grams 5&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Potatoes, 4.54 kilograms 4&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;White rice, 2 kilograms 5&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Canned baked beans, 398 millilitres 5&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cucumber, unit 4&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ketchup, 1 litre 5&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pears, per kilogram 4&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tofu, 350 grams  5&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bananas, per kilogram 4&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cantaloupe, unit 4&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Frozen mixed vegetables, 750 grams  5&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Nut milk, 1.89 litres 5&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Salad greens, 142 grams 5&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Brown rice, 900 grams  5&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cookies and sweet biscuits, 300 grams  5&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hummus, 227 grams 5&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Pasta sauce, 650 millilitres 5&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sunflower seeds, 400 grams  5&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Butter, 454 grams 4&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Crackers and crisp breads, 200 grams  4&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Iceberg lettuce, unit 4&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Peanut butter, 1 kilogram 5&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sweet potatoes, per kilogram 4&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Canned beans and lentils, 540 millilitres 4&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Dried lentils, 900 grams 5&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lemons, unit 4&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Peppers, per kilogram 4&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tomatoes, per kilogram 4&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Canned peach, 398 millilitres 5&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dry or fresh pasta, 500 grams 5&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Margarine, 907 grams 5&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Pork rib cuts, per kilogram 4&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Wheat flour, 2.5 kilograms 5&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Beef top sirloin cuts, per kilogram 4&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Chicken breasts, per kilogram 4&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Frozen strawberries, 600 grams 4&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Orange juice, 2 litres 5&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Soy milk, 1.89 litres 5&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Beef rib cuts, per kilogram 4&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Carrots, 1.36 kilograms 5&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Frozen peas, 750 grams 5&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Olive oil, 1 litre 5&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Salmon, per kilogram 4&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Apples, per kilogram 4&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Canned soup, 284 millilitres 5&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Frozen broccoli, 500 grams 4&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Milk, 1 litre 4&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Potatoes, per kilogram 4&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;White sugar, 2 kilograms 5&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cabbage, per kilogram 4&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cream, 1 litre 4&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Infant formula, 900 grams  5&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Peanuts, 450 grams 5&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tea (20 bags) 4&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Block cheese, 500 grams 5&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Chicken drumsticks, per kilogram 4&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Grapes, per kilogram 4&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Oranges, 1.36 kilograms 4 5&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Squash, per kilogram 4&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Avocado, unit 4&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Canned tomatoes, 796 millilitres 5&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Frozen corn, 750 grams  5&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Milk, 2 litres 4&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Roasted or ground coffee, 340 grams 5&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Whole chicken, per kilogram 4&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Monthly average retail prices for selected products- Food_clean.csv' id='Monthly average retail prices for selected products- Food_clean.csv_1269F40AE76E4B5984B48843A812DB33'>
            <properties context=''>
              <relation name='Pivot' type='pivot'>
                <columns>
                  <column datatype='date' date-parse-format='yy-MMM' name='Pivot Field Names' />
                  <column datatype='real' name='Pivot Field Values' />
                </columns>
                <tag name='Pivot Field Names'>
                  <value name='[17-Apr]' />
                  <value name='[17-Aug]' />
                  <value name='[17-Dec]' />
                  <value name='[17-Feb]' />
                  <value name='[17-Jan]' />
                  <value name='[17-Jul]' />
                  <value name='[17-Jun]' />
                  <value name='[17-Mar]' />
                  <value name='[17-May]' />
                  <value name='[17-Nov]' />
                  <value name='[17-Oct]' />
                  <value name='[17-Sep]' />
                  <value name='[18-Apr]' />
                  <value name='[18-Aug]' />
                  <value name='[18-Dec]' />
                  <value name='[18-Feb]' />
                  <value name='[18-Jan]' />
                  <value name='[18-Jul]' />
                  <value name='[18-Jun]' />
                  <value name='[18-Mar]' />
                  <value name='[18-May]' />
                  <value name='[18-Nov]' />
                  <value name='[18-Oct]' />
                  <value name='[18-Sep]' />
                  <value name='[19-Apr]' />
                  <value name='[19-Aug]' />
                  <value name='[19-Dec]' />
                  <value name='[19-Feb]' />
                  <value name='[19-Jan]' />
                  <value name='[19-Jul]' />
                  <value name='[19-Jun]' />
                  <value name='[19-Mar]' />
                  <value name='[19-May]' />
                  <value name='[19-Nov]' />
                  <value name='[19-Oct]' />
                  <value name='[19-Sep]' />
                  <value name='[20-Apr]' />
                  <value name='[20-Aug]' />
                  <value name='[20-Dec]' />
                  <value name='[20-Feb]' />
                  <value name='[20-Jan]' />
                  <value name='[20-Jul]' />
                  <value name='[20-Jun]' />
                  <value name='[20-Mar]' />
                  <value name='[20-May]' />
                  <value name='[20-Nov]' />
                  <value name='[20-Oct]' />
                  <value name='[20-Sep]' />
                  <value name='[21-Apr]' />
                  <value name='[21-Aug]' />
                  <value name='[21-Dec]' />
                  <value name='[21-Feb]' />
                  <value name='[21-Jan]' />
                  <value name='[21-Jul]' />
                  <value name='[21-Jun]' />
                  <value name='[21-Mar]' />
                  <value name='[21-May]' />
                  <value name='[21-Nov]' />
                  <value name='[21-Oct]' />
                  <value name='[21-Sep]' />
                  <value name='[22-Apr]' />
                  <value name='[22-Aug]' />
                  <value name='[22-Dec]' />
                  <value name='[22-Feb]' />
                  <value name='[22-Jan]' />
                  <value name='[22-Jul]' />
                  <value name='[22-Jun]' />
                  <value name='[22-Mar]' />
                  <value name='[22-May]' />
                  <value name='[22-Nov]' />
                  <value name='[22-Oct]' />
                  <value name='[22-Sep]' />
                  <value name='[23-Apr]' />
                  <value name='[23-Aug]' />
                  <value name='[23-Dec]' />
                  <value name='[23-Feb]' />
                  <value name='[23-Jan]' />
                  <value name='[23-Jul]' />
                  <value name='[23-Jun]' />
                  <value name='[23-Mar]' />
                  <value name='[23-May]' />
                  <value name='[23-Nov]' />
                  <value name='[23-Oct]' />
                  <value name='[23-Sep]' />
                  <value name='[24-Apr]' />
                  <value name='[24-Aug]' />
                  <value name='[24-Dec]' />
                  <value name='[24-Feb]' />
                  <value name='[24-Jan]' />
                  <value name='[24-Jul]' />
                  <value name='[24-Jun]' />
                  <value name='[24-Mar]' />
                  <value name='[24-May]' />
                  <value name='[24-Nov]' />
                  <value name='[24-Oct]' />
                  <value name='[24-Sep]' />
                </tag>
                <groups>
                  <group name='Pivot Field Values'>
                    <field name='[Monthly average retail prices for selected products- Food_clean.csv].[17-Apr]' />
                    <field name='[Monthly average retail prices for selected products- Food_clean.csv].[17-Aug]' />
                    <field name='[Monthly average retail prices for selected products- Food_clean.csv].[17-Dec]' />
                    <field name='[Monthly average retail prices for selected products- Food_clean.csv].[17-Feb]' />
                    <field name='[Monthly average retail prices for selected products- Food_clean.csv].[17-Jan]' />
                    <field name='[Monthly average retail prices for selected products- Food_clean.csv].[17-Jul]' />
                    <field name='[Monthly average retail prices for selected products- Food_clean.csv].[17-Jun]' />
                    <field name='[Monthly average retail prices for selected products- Food_clean.csv].[17-Mar]' />
                    <field name='[Monthly average retail prices for selected products- Food_clean.csv].[17-May]' />
                    <field name='[Monthly average retail prices for selected products- Food_clean.csv].[17-Nov]' />
                    <field name='[Monthly average retail prices for selected products- Food_clean.csv].[17-Oct]' />
                    <field name='[Monthly average retail prices for selected products- Food_clean.csv].[17-Sep]' />
                    <field name='[Monthly average retail prices for selected products- Food_clean.csv].[18-Apr]' />
                    <field name='[Monthly average retail prices for selected products- Food_clean.csv].[18-Aug]' />
                    <field name='[Monthly average retail prices for selected products- Food_clean.csv].[18-Dec]' />
                    <field name='[Monthly average retail prices for selected products- Food_clean.csv].[18-Feb]' />
                    <field name='[Monthly average retail prices for selected products- Food_clean.csv].[18-Jan]' />
                    <field name='[Monthly average retail prices for selected products- Food_clean.csv].[18-Jul]' />
                    <field name='[Monthly average retail prices for selected products- Food_clean.csv].[18-Jun]' />
                    <field name='[Monthly average retail prices for selected products- Food_clean.csv].[18-Mar]' />
                    <field name='[Monthly average retail prices for selected products- Food_clean.csv].[18-May]' />
                    <field name='[Monthly average retail prices for selected products- Food_clean.csv].[18-Nov]' />
                    <field name='[Monthly average retail prices for selected products- Food_clean.csv].[18-Oct]' />
                    <field name='[Monthly average retail prices for selected products- Food_clean.csv].[18-Sep]' />
                    <field name='[Monthly average retail prices for selected products- Food_clean.csv].[19-Apr]' />
                    <field name='[Monthly average retail prices for selected products- Food_clean.csv].[19-Aug]' />
                    <field name='[Monthly average retail prices for selected products- Food_clean.csv].[19-Dec]' />
                    <field name='[Monthly average retail prices for selected products- Food_clean.csv].[19-Feb]' />
                    <field name='[Monthly average retail prices for selected products- Food_clean.csv].[19-Jan]' />
                    <field name='[Monthly average retail prices for selected products- Food_clean.csv].[19-Jul]' />
                    <field name='[Monthly average retail prices for selected products- Food_clean.csv].[19-Jun]' />
                    <field name='[Monthly average retail prices for selected products- Food_clean.csv].[19-Mar]' />
                    <field name='[Monthly average retail prices for selected products- Food_clean.csv].[19-May]' />
                    <field name='[Monthly average retail prices for selected products- Food_clean.csv].[19-Nov]' />
                    <field name='[Monthly average retail prices for selected products- Food_clean.csv].[19-Oct]' />
                    <field name='[Monthly average retail prices for selected products- Food_clean.csv].[19-Sep]' />
                    <field name='[Monthly average retail prices for selected products- Food_clean.csv].[20-Apr]' />
                    <field name='[Monthly average retail prices for selected products- Food_clean.csv].[20-Aug]' />
                    <field name='[Monthly average retail prices for selected products- Food_clean.csv].[20-Dec]' />
                    <field name='[Monthly average retail prices for selected products- Food_clean.csv].[20-Feb]' />
                    <field name='[Monthly average retail prices for selected products- Food_clean.csv].[20-Jan]' />
                    <field name='[Monthly average retail prices for selected products- Food_clean.csv].[20-Jul]' />
                    <field name='[Monthly average retail prices for selected products- Food_clean.csv].[20-Jun]' />
                    <field name='[Monthly average retail prices for selected products- Food_clean.csv].[20-Mar]' />
                    <field name='[Monthly average retail prices for selected products- Food_clean.csv].[20-May]' />
                    <field name='[Monthly average retail prices for selected products- Food_clean.csv].[20-Nov]' />
                    <field name='[Monthly average retail prices for selected products- Food_clean.csv].[20-Oct]' />
                    <field name='[Monthly average retail prices for selected products- Food_clean.csv].[20-Sep]' />
                    <field name='[Monthly average retail prices for selected products- Food_clean.csv].[21-Apr]' />
                    <field name='[Monthly average retail prices for selected products- Food_clean.csv].[21-Aug]' />
                    <field name='[Monthly average retail prices for selected products- Food_clean.csv].[21-Dec]' />
                    <field name='[Monthly average retail prices for selected products- Food_clean.csv].[21-Feb]' />
                    <field name='[Monthly average retail prices for selected products- Food_clean.csv].[21-Jan]' />
                    <field name='[Monthly average retail prices for selected products- Food_clean.csv].[21-Jul]' />
                    <field name='[Monthly average retail prices for selected products- Food_clean.csv].[21-Jun]' />
                    <field name='[Monthly average retail prices for selected products- Food_clean.csv].[21-Mar]' />
                    <field name='[Monthly average retail prices for selected products- Food_clean.csv].[21-May]' />
                    <field name='[Monthly average retail prices for selected products- Food_clean.csv].[21-Nov]' />
                    <field name='[Monthly average retail prices for selected products- Food_clean.csv].[21-Oct]' />
                    <field name='[Monthly average retail prices for selected products- Food_clean.csv].[21-Sep]' />
                    <field name='[Monthly average retail prices for selected products- Food_clean.csv].[22-Apr]' />
                    <field name='[Monthly average retail prices for selected products- Food_clean.csv].[22-Aug]' />
                    <field name='[Monthly average retail prices for selected products- Food_clean.csv].[22-Dec]' />
                    <field name='[Monthly average retail prices for selected products- Food_clean.csv].[22-Feb]' />
                    <field name='[Monthly average retail prices for selected products- Food_clean.csv].[22-Jan]' />
                    <field name='[Monthly average retail prices for selected products- Food_clean.csv].[22-Jul]' />
                    <field name='[Monthly average retail prices for selected products- Food_clean.csv].[22-Jun]' />
                    <field name='[Monthly average retail prices for selected products- Food_clean.csv].[22-Mar]' />
                    <field name='[Monthly average retail prices for selected products- Food_clean.csv].[22-May]' />
                    <field name='[Monthly average retail prices for selected products- Food_clean.csv].[22-Nov]' />
                    <field name='[Monthly average retail prices for selected products- Food_clean.csv].[22-Oct]' />
                    <field name='[Monthly average retail prices for selected products- Food_clean.csv].[22-Sep]' />
                    <field name='[Monthly average retail prices for selected products- Food_clean.csv].[23-Apr]' />
                    <field name='[Monthly average retail prices for selected products- Food_clean.csv].[23-Aug]' />
                    <field name='[Monthly average retail prices for selected products- Food_clean.csv].[23-Dec]' />
                    <field name='[Monthly average retail prices for selected products- Food_clean.csv].[23-Feb]' />
                    <field name='[Monthly average retail prices for selected products- Food_clean.csv].[23-Jan]' />
                    <field name='[Monthly average retail prices for selected products- Food_clean.csv].[23-Jul]' />
                    <field name='[Monthly average retail prices for selected products- Food_clean.csv].[23-Jun]' />
                    <field name='[Monthly average retail prices for selected products- Food_clean.csv].[23-Mar]' />
                    <field name='[Monthly average retail prices for selected products- Food_clean.csv].[23-May]' />
                    <field name='[Monthly average retail prices for selected products- Food_clean.csv].[23-Nov]' />
                    <field name='[Monthly average retail prices for selected products- Food_clean.csv].[23-Oct]' />
                    <field name='[Monthly average retail prices for selected products- Food_clean.csv].[23-Sep]' />
                    <field name='[Monthly average retail prices for selected products- Food_clean.csv].[24-Apr]' />
                    <field name='[Monthly average retail prices for selected products- Food_clean.csv].[24-Aug]' />
                    <field name='[Monthly average retail prices for selected products- Food_clean.csv].[24-Dec]' />
                    <field name='[Monthly average retail prices for selected products- Food_clean.csv].[24-Feb]' />
                    <field name='[Monthly average retail prices for selected products- Food_clean.csv].[24-Jan]' />
                    <field name='[Monthly average retail prices for selected products- Food_clean.csv].[24-Jul]' />
                    <field name='[Monthly average retail prices for selected products- Food_clean.csv].[24-Jun]' />
                    <field name='[Monthly average retail prices for selected products- Food_clean.csv].[24-Mar]' />
                    <field name='[Monthly average retail prices for selected products- Food_clean.csv].[24-May]' />
                    <field name='[Monthly average retail prices for selected products- Food_clean.csv].[24-Nov]' />
                    <field name='[Monthly average retail prices for selected products- Food_clean.csv].[24-Oct]' />
                    <field name='[Monthly average retail prices for selected products- Food_clean.csv].[24-Sep]' />
                  </group>
                </groups>
                <relation connection='textscan.05vgtdf1eeemxd15sotq41og47mu' name='Monthly average retail prices for selected products- Food_clean.csv' table='[Monthly average retail prices for selected products- Food_clean#csv]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                    <column datatype='string' name='Products' ordinal='0' />
                    <column datatype='real' name='17-Jan' ordinal='1' />
                    <column datatype='real' name='17-Feb' ordinal='2' />
                    <column datatype='real' name='17-Mar' ordinal='3' />
                    <column datatype='real' name='17-Apr' ordinal='4' />
                    <column datatype='real' name='17-May' ordinal='5' />
                    <column datatype='real' name='17-Jun' ordinal='6' />
                    <column datatype='real' name='17-Jul' ordinal='7' />
                    <column datatype='real' name='17-Aug' ordinal='8' />
                    <column datatype='real' name='17-Sep' ordinal='9' />
                    <column datatype='real' name='17-Oct' ordinal='10' />
                    <column datatype='real' name='17-Nov' ordinal='11' />
                    <column datatype='real' name='17-Dec' ordinal='12' />
                    <column datatype='real' name='18-Jan' ordinal='13' />
                    <column datatype='real' name='18-Feb' ordinal='14' />
                    <column datatype='real' name='18-Mar' ordinal='15' />
                    <column datatype='real' name='18-Apr' ordinal='16' />
                    <column datatype='real' name='18-May' ordinal='17' />
                    <column datatype='real' name='18-Jun' ordinal='18' />
                    <column datatype='real' name='18-Jul' ordinal='19' />
                    <column datatype='real' name='18-Aug' ordinal='20' />
                    <column datatype='real' name='18-Sep' ordinal='21' />
                    <column datatype='real' name='18-Oct' ordinal='22' />
                    <column datatype='real' name='18-Nov' ordinal='23' />
                    <column datatype='real' name='18-Dec' ordinal='24' />
                    <column datatype='real' name='19-Jan' ordinal='25' />
                    <column datatype='real' name='19-Feb' ordinal='26' />
                    <column datatype='real' name='19-Mar' ordinal='27' />
                    <column datatype='real' name='19-Apr' ordinal='28' />
                    <column datatype='real' name='19-May' ordinal='29' />
                    <column datatype='real' name='19-Jun' ordinal='30' />
                    <column datatype='real' name='19-Jul' ordinal='31' />
                    <column datatype='real' name='19-Aug' ordinal='32' />
                    <column datatype='real' name='19-Sep' ordinal='33' />
                    <column datatype='real' name='19-Oct' ordinal='34' />
                    <column datatype='real' name='19-Nov' ordinal='35' />
                    <column datatype='real' name='19-Dec' ordinal='36' />
                    <column datatype='real' name='20-Jan' ordinal='37' />
                    <column datatype='real' name='20-Feb' ordinal='38' />
                    <column datatype='real' name='20-Mar' ordinal='39' />
                    <column datatype='real' name='20-Apr' ordinal='40' />
                    <column datatype='real' name='20-May' ordinal='41' />
                    <column datatype='real' name='20-Jun' ordinal='42' />
                    <column datatype='real' name='20-Jul' ordinal='43' />
                    <column datatype='real' name='20-Aug' ordinal='44' />
                    <column datatype='real' name='20-Sep' ordinal='45' />
                    <column datatype='real' name='20-Oct' ordinal='46' />
                    <column datatype='real' name='20-Nov' ordinal='47' />
                    <column datatype='real' name='20-Dec' ordinal='48' />
                    <column datatype='real' name='21-Jan' ordinal='49' />
                    <column datatype='real' name='21-Feb' ordinal='50' />
                    <column datatype='real' name='21-Mar' ordinal='51' />
                    <column datatype='real' name='21-Apr' ordinal='52' />
                    <column datatype='real' name='21-May' ordinal='53' />
                    <column datatype='real' name='21-Jun' ordinal='54' />
                    <column datatype='real' name='21-Jul' ordinal='55' />
                    <column datatype='real' name='21-Aug' ordinal='56' />
                    <column datatype='real' name='21-Sep' ordinal='57' />
                    <column datatype='real' name='21-Oct' ordinal='58' />
                    <column datatype='real' name='21-Nov' ordinal='59' />
                    <column datatype='real' name='21-Dec' ordinal='60' />
                    <column datatype='real' name='22-Jan' ordinal='61' />
                    <column datatype='real' name='22-Feb' ordinal='62' />
                    <column datatype='real' name='22-Mar' ordinal='63' />
                    <column datatype='real' name='22-Apr' ordinal='64' />
                    <column datatype='real' name='22-May' ordinal='65' />
                    <column datatype='real' name='22-Jun' ordinal='66' />
                    <column datatype='real' name='22-Jul' ordinal='67' />
                    <column datatype='real' name='22-Aug' ordinal='68' />
                    <column datatype='real' name='22-Sep' ordinal='69' />
                    <column datatype='real' name='22-Oct' ordinal='70' />
                    <column datatype='real' name='22-Nov' ordinal='71' />
                    <column datatype='real' name='22-Dec' ordinal='72' />
                    <column datatype='real' name='23-Jan' ordinal='73' />
                    <column datatype='real' name='23-Feb' ordinal='74' />
                    <column datatype='real' name='23-Mar' ordinal='75' />
                    <column datatype='real' name='23-Apr' ordinal='76' />
                    <column datatype='real' name='23-May' ordinal='77' />
                    <column datatype='real' name='23-Jun' ordinal='78' />
                    <column datatype='real' name='23-Jul' ordinal='79' />
                    <column datatype='real' name='23-Aug' ordinal='80' />
                    <column datatype='real' name='23-Sep' ordinal='81' />
                    <column datatype='real' name='23-Oct' ordinal='82' />
                    <column datatype='real' name='23-Nov' ordinal='83' />
                    <column datatype='real' name='23-Dec' ordinal='84' />
                    <column datatype='real' name='24-Jan' ordinal='85' />
                    <column datatype='real' name='24-Feb' ordinal='86' />
                    <column datatype='real' name='24-Mar' ordinal='87' />
                    <column datatype='real' name='24-Apr' ordinal='88' />
                    <column datatype='real' name='24-May' ordinal='89' />
                    <column datatype='real' name='24-Jun' ordinal='90' />
                    <column datatype='real' name='24-Jul' ordinal='91' />
                    <column datatype='real' name='24-Aug' ordinal='92' />
                    <column datatype='real' name='24-Sep' ordinal='93' />
                    <column datatype='real' name='24-Oct' ordinal='94' />
                    <column datatype='real' name='24-Nov' ordinal='95' />
                    <column datatype='real' name='24-Dec' ordinal='96' />
                  </columns>
                </relation>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='All Products'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>All Products</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Monthly average retail prices for selected products- Food_clean' name='federated.1oqgssu19p11sn19fv0mc0g99tfr' />
          </datasources>
          <datasource-dependencies datasource='federated.1oqgssu19p11sn19fv0mc0g99tfr'>
            <column caption='Date' datatype='date' name='[Pivot Field Names]' role='dimension' type='ordinal' />
            <column caption='Monthly Retail Price' datatype='real' name='[Pivot Field Values]' role='measure' type='quantitative' />
            <column datatype='string' name='[Products]' role='dimension' type='nominal' />
            <column-instance column='[Pivot Field Values]' derivation='Avg' name='[avg:Pivot Field Values:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Products]' derivation='None' name='[none:Products:nk]' pivot='key' type='nominal' />
            <column-instance column='[Pivot Field Names]' derivation='Year' name='[yr:Pivot Field Names:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1oqgssu19p11sn19fv0mc0g99tfr].[none:Products:nk]'>
            <groupfilter function='level-members' level='[none:Products:nk]' />
          </filter>
          <slices>
            <column>[federated.1oqgssu19p11sn19fv0mc0g99tfr].[none:Products:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='field-labels-spanner'>
            <format attr='font-size' scope='cols' value='11' />
          </style-rule>
          <style-rule element='axis-title'>
            <format attr='font-size' field='[federated.1oqgssu19p11sn19fv0mc0g99tfr].[avg:Pivot Field Values:qk]' value='11' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1oqgssu19p11sn19fv0mc0g99tfr].[none:Products:nk]' />
              <text column='[federated.1oqgssu19p11sn19fv0mc0g99tfr].[none:Products:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1oqgssu19p11sn19fv0mc0g99tfr].[avg:Pivot Field Values:qk]</rows>
        <cols>[federated.1oqgssu19p11sn19fv0mc0g99tfr].[yr:Pivot Field Names:ok]</cols>
      </table>
      <simple-id uuid='{841AC5F1-B996-4F33-A4D2-6B4D31490600}' />
    </worksheet>
    <worksheet name='Bread'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Bread, Rice, Pasta</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Monthly average retail prices for selected products- Food_clean' name='federated.1oqgssu19p11sn19fv0mc0g99tfr' />
          </datasources>
          <datasource-dependencies datasource='federated.1oqgssu19p11sn19fv0mc0g99tfr'>
            <column caption='Date' datatype='date' name='[Pivot Field Names]' role='dimension' type='ordinal' />
            <column caption='Monthly Retail Price' datatype='real' name='[Pivot Field Values]' role='measure' type='quantitative' />
            <column datatype='string' name='[Products]' role='dimension' type='nominal' />
            <column-instance column='[Pivot Field Values]' derivation='Avg' name='[avg:Pivot Field Values:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Products]' derivation='None' name='[none:Products:nk]' pivot='key' type='nominal' />
            <column-instance column='[Pivot Field Names]' derivation='Year' name='[yr:Pivot Field Names:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1oqgssu19p11sn19fv0mc0g99tfr].[none:Products:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Brown rice, 900 grams  5&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Cookies and sweet biscuits, 300 grams  5&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Crackers and crisp breads, 200 grams  4&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Dry or fresh pasta, 500 grams 5&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Flatbread and pita, 500 grams  5&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Wheat flour, 2.5 kilograms 5&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;White bread, 675 grams 5&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;White rice, 2 kilograms 5&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;White sugar, 2 kilograms 5&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1oqgssu19p11sn19fv0mc0g99tfr].[none:Products:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1oqgssu19p11sn19fv0mc0g99tfr].[avg:Pivot Field Values:qk]' field-type='quantitative' max='10.185734693877553' min='1.0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='field-labels-spanner'>
            <format attr='font-size' scope='cols' value='11' />
          </style-rule>
          <style-rule element='axis-title'>
            <format attr='font-size' field='[federated.1oqgssu19p11sn19fv0mc0g99tfr].[avg:Pivot Field Values:qk]' value='11' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1oqgssu19p11sn19fv0mc0g99tfr].[none:Products:nk]' />
              <text column='[federated.1oqgssu19p11sn19fv0mc0g99tfr].[none:Products:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1oqgssu19p11sn19fv0mc0g99tfr].[avg:Pivot Field Values:qk]</rows>
        <cols>[federated.1oqgssu19p11sn19fv0mc0g99tfr].[yr:Pivot Field Names:ok]</cols>
      </table>
      <simple-id uuid='{A99859CE-9A01-4E53-B58F-48FF48EE9C71}' />
    </worksheet>
    <worksheet name='Canned, frozen'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Canned, Frozen</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Monthly average retail prices for selected products- Food_clean' name='federated.1oqgssu19p11sn19fv0mc0g99tfr' />
          </datasources>
          <datasource-dependencies datasource='federated.1oqgssu19p11sn19fv0mc0g99tfr'>
            <column caption='Date' datatype='date' name='[Pivot Field Names]' role='dimension' type='ordinal' />
            <column caption='Monthly Retail Price' datatype='real' name='[Pivot Field Values]' role='measure' type='quantitative' />
            <column datatype='string' name='[Products]' role='dimension' type='nominal' />
            <column-instance column='[Pivot Field Values]' derivation='Avg' name='[avg:Pivot Field Values:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Products]' derivation='None' name='[none:Products:nk]' pivot='key' type='nominal' />
            <column-instance column='[Pivot Field Names]' derivation='Year' name='[yr:Pivot Field Names:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1oqgssu19p11sn19fv0mc0g99tfr].[none:Products:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Canned baked beans, 398 millilitres 5&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Canned beans and lentils, 540 millilitres 4&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Canned corn, 341 millilitres 5&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Canned peach, 398 millilitres 5&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Canned pear, 398 millilitres 5&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Canned salmon, 213 grams 5&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Canned soup, 284 millilitres 5&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Canned tomatoes, 796 millilitres 5&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Canned tuna, 170 grams 4&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Frozen broccoli, 500 grams 4&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Frozen corn, 750 grams  5&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Frozen french fried potatoes, 750 grams 5&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Frozen green beans, 750 grams 5&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Frozen mixed vegetables, 750 grams  5&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Frozen peas, 750 grams 5&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Frozen pizza, 390 grams 5&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Frozen spinach, 300 grams 5&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Frozen strawberries, 600 grams 4&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1oqgssu19p11sn19fv0mc0g99tfr].[none:Products:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='field-labels-spanner'>
            <format attr='font-size' scope='cols' value='11' />
          </style-rule>
          <style-rule element='axis-title'>
            <format attr='font-size' field='[federated.1oqgssu19p11sn19fv0mc0g99tfr].[avg:Pivot Field Values:qk]' value='11' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1oqgssu19p11sn19fv0mc0g99tfr].[none:Products:nk]' />
              <text column='[federated.1oqgssu19p11sn19fv0mc0g99tfr].[none:Products:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1oqgssu19p11sn19fv0mc0g99tfr].[avg:Pivot Field Values:qk]</rows>
        <cols>[federated.1oqgssu19p11sn19fv0mc0g99tfr].[yr:Pivot Field Names:ok]</cols>
      </table>
      <simple-id uuid='{4BBE472F-74AC-4D79-B662-4EAC4BC98938}' />
    </worksheet>
    <worksheet name='Dairy'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Dairy, Non-dairy</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Monthly average retail prices for selected products- Food_clean' name='federated.1oqgssu19p11sn19fv0mc0g99tfr' />
          </datasources>
          <datasource-dependencies datasource='federated.1oqgssu19p11sn19fv0mc0g99tfr'>
            <column caption='Date' datatype='date' name='[Pivot Field Names]' role='dimension' type='ordinal' />
            <column caption='Monthly Retail Price' datatype='real' name='[Pivot Field Values]' role='measure' type='quantitative' />
            <column datatype='string' name='[Products]' role='dimension' type='nominal' />
            <column-instance column='[Pivot Field Values]' derivation='Avg' name='[avg:Pivot Field Values:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Products]' derivation='None' name='[none:Products:nk]' pivot='key' type='nominal' />
            <column-instance column='[Pivot Field Names]' derivation='Year' name='[yr:Pivot Field Names:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1oqgssu19p11sn19fv0mc0g99tfr].[none:Products:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Block cheese, 500 grams 5&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Butter, 454 grams 4&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Cream, 1 litre 4&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Eggs, 1 dozen 4&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Margarine, 907 grams 5&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Milk, 1 litre 4&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Milk, 2 litres 4&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Milk, 4 litres 4&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Nut milk, 1.89 litres 5&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Soy milk, 1.89 litres 5&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Yogurt, 500 grams 5&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1oqgssu19p11sn19fv0mc0g99tfr].[none:Products:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1oqgssu19p11sn19fv0mc0g99tfr].[avg:Pivot Field Values:qk]' field-type='quantitative' max='7.7838775510204075' min='2.0' range-type='fixed' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.1oqgssu19p11sn19fv0mc0g99tfr].[avg:Pivot Field Values:qk]' scope='rows' value='Avg. Monthly Retail Price ($)' />
          </style-rule>
          <style-rule element='field-labels-spanner'>
            <format attr='font-size' scope='cols' value='11' />
          </style-rule>
          <style-rule element='axis-title'>
            <format attr='font-size' field='[federated.1oqgssu19p11sn19fv0mc0g99tfr].[avg:Pivot Field Values:qk]' value='11' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1oqgssu19p11sn19fv0mc0g99tfr].[none:Products:nk]' />
              <text column='[federated.1oqgssu19p11sn19fv0mc0g99tfr].[none:Products:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1oqgssu19p11sn19fv0mc0g99tfr].[avg:Pivot Field Values:qk]</rows>
        <cols>[federated.1oqgssu19p11sn19fv0mc0g99tfr].[yr:Pivot Field Names:ok]</cols>
      </table>
      <simple-id uuid='{5E931DF5-4380-4353-B4F7-32C194D9A7F2}' />
    </worksheet>
    <worksheet name='Fresh Fruit'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Fresh Fruit</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Monthly average retail prices for selected products- Food_clean' name='federated.1oqgssu19p11sn19fv0mc0g99tfr' />
          </datasources>
          <datasource-dependencies datasource='federated.1oqgssu19p11sn19fv0mc0g99tfr'>
            <column caption='Date' datatype='date' name='[Pivot Field Names]' role='dimension' type='ordinal' />
            <column caption='Monthly Retail Price' datatype='real' name='[Pivot Field Values]' role='measure' type='quantitative' />
            <column datatype='string' name='[Products]' role='dimension' type='nominal' />
            <column-instance column='[Pivot Field Values]' derivation='Avg' name='[avg:Pivot Field Values:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Products]' derivation='None' name='[none:Products:nk]' pivot='key' type='nominal' />
            <column-instance column='[Pivot Field Names]' derivation='Year' name='[yr:Pivot Field Names:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1oqgssu19p11sn19fv0mc0g99tfr].[none:Products:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Apples, per kilogram 4&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Avocado, unit 4&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Bananas, per kilogram 4&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Cantaloupe, unit 4&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Grapes, per kilogram 4&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Oranges, per kilogram 4&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Pears, per kilogram 4&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Strawberries, 454 grams 5&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1oqgssu19p11sn19fv0mc0g99tfr].[none:Products:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='field-labels-spanner'>
            <format attr='font-size' scope='cols' value='11' />
          </style-rule>
          <style-rule element='axis-title'>
            <format attr='font-size' field='[federated.1oqgssu19p11sn19fv0mc0g99tfr].[avg:Pivot Field Values:qk]' value='11' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1oqgssu19p11sn19fv0mc0g99tfr].[none:Products:nk]' />
              <text column='[federated.1oqgssu19p11sn19fv0mc0g99tfr].[none:Products:nk]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-size' value='11' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='1.1314364671707153' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1oqgssu19p11sn19fv0mc0g99tfr].[avg:Pivot Field Values:qk]</rows>
        <cols>[federated.1oqgssu19p11sn19fv0mc0g99tfr].[yr:Pivot Field Names:ok]</cols>
      </table>
      <simple-id uuid='{6D58ECFE-DBAF-4FB2-B084-9FCB963B7AD5}' />
    </worksheet>
    <worksheet name='Meats, Fish, Tofu'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Meats, Fish, Tofu</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Monthly average retail prices for selected products- Food_clean' name='federated.1oqgssu19p11sn19fv0mc0g99tfr' />
          </datasources>
          <datasource-dependencies datasource='federated.1oqgssu19p11sn19fv0mc0g99tfr'>
            <column caption='Date' datatype='date' name='[Pivot Field Names]' role='dimension' type='ordinal' />
            <column caption='Monthly Retail Price' datatype='real' name='[Pivot Field Values]' role='measure' type='quantitative' />
            <column datatype='string' name='[Products]' role='dimension' type='nominal' />
            <column-instance column='[Pivot Field Values]' derivation='Avg' name='[avg:Pivot Field Values:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Products]' derivation='None' name='[none:Products:nk]' pivot='key' type='nominal' />
            <column-instance column='[Pivot Field Names]' derivation='Year' name='[yr:Pivot Field Names:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1oqgssu19p11sn19fv0mc0g99tfr].[none:Products:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Bacon, 500 grams 5&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Beef rib cuts, per kilogram 4&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Beef stewing cuts, per kilogram 4&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Beef striploin cuts, per kilogram 4&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Beef top sirloin cuts, per kilogram 4&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Chicken breasts, per kilogram 4&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Chicken drumsticks, per kilogram 4&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Chicken thigh, per kilogram 4&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Ground beef, per kilogram 4&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Meatless burgers, 226 grams 5&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Pork loin cuts, per kilogram 4&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Pork rib cuts, per kilogram 4&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Pork shoulder cuts, per kilogram 4&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Salmon, per kilogram 4&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Shrimp, 300 grams 5&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Tofu, 350 grams  5&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Whole chicken, per kilogram 4&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Wieners, 400 grams 5&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1oqgssu19p11sn19fv0mc0g99tfr].[none:Products:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='field-labels-spanner'>
            <format attr='font-size' scope='cols' value='11' />
          </style-rule>
          <style-rule element='axis-title'>
            <format attr='font-size' field='[federated.1oqgssu19p11sn19fv0mc0g99tfr].[avg:Pivot Field Values:qk]' value='11' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1oqgssu19p11sn19fv0mc0g99tfr].[none:Products:nk]' />
              <text column='[federated.1oqgssu19p11sn19fv0mc0g99tfr].[none:Products:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='line-ends' />
                <format attr='mark-labels-line-first' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1oqgssu19p11sn19fv0mc0g99tfr].[avg:Pivot Field Values:qk]</rows>
        <cols>[federated.1oqgssu19p11sn19fv0mc0g99tfr].[yr:Pivot Field Names:ok]</cols>
      </table>
      <simple-id uuid='{02CCB871-4698-4880-965B-077E5B629F6B}' />
    </worksheet>
    <worksheet name='Nuts'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Nuts, Seeds, Legumes, Oil</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Monthly average retail prices for selected products- Food_clean' name='federated.1oqgssu19p11sn19fv0mc0g99tfr' />
          </datasources>
          <datasource-dependencies datasource='federated.1oqgssu19p11sn19fv0mc0g99tfr'>
            <column caption='Date' datatype='date' name='[Pivot Field Names]' role='dimension' type='ordinal' />
            <column caption='Monthly Retail Price' datatype='real' name='[Pivot Field Values]' role='measure' type='quantitative' />
            <column datatype='string' name='[Products]' role='dimension' type='nominal' />
            <column-instance column='[Pivot Field Values]' derivation='Avg' name='[avg:Pivot Field Values:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Products]' derivation='None' name='[none:Products:nk]' pivot='key' type='nominal' />
            <column-instance column='[Pivot Field Names]' derivation='Year' name='[yr:Pivot Field Names:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1oqgssu19p11sn19fv0mc0g99tfr].[none:Products:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Almonds, 200 grams 5&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Canola oil, 3 litres 5&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Dried lentils, 900 grams 5&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Dry beans and legumes, 900 grams  5&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Olive oil, 1 litre 5&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Peanuts, 450 grams 5&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Sunflower seeds, 400 grams  5&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Vegetable oil, 3 litres 5&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Wheat flour, 2.5 kilograms 5&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1oqgssu19p11sn19fv0mc0g99tfr].[none:Products:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1oqgssu19p11sn19fv0mc0g99tfr].[avg:Pivot Field Values:qk]' field-type='quantitative' max='16.911285714285714' min='2.0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='field-labels-spanner'>
            <format attr='font-size' scope='cols' value='11' />
          </style-rule>
          <style-rule element='axis-title'>
            <format attr='font-size' field='[federated.1oqgssu19p11sn19fv0mc0g99tfr].[avg:Pivot Field Values:qk]' value='11' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1oqgssu19p11sn19fv0mc0g99tfr].[none:Products:nk]' />
              <text column='[federated.1oqgssu19p11sn19fv0mc0g99tfr].[none:Products:nk]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-size' value='11' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='0.97751379013061523' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1oqgssu19p11sn19fv0mc0g99tfr].[avg:Pivot Field Values:qk]</rows>
        <cols>[federated.1oqgssu19p11sn19fv0mc0g99tfr].[yr:Pivot Field Names:ok]</cols>
      </table>
      <simple-id uuid='{7C59AA54-43B4-42C0-ACBE-B2A69C595DE2}' />
    </worksheet>
    <worksheet name='P 1-20'>
      <table>
        <view>
          <datasources>
            <datasource caption='Monthly average retail prices for selected products- Food_clean' name='federated.1oqgssu19p11sn19fv0mc0g99tfr' />
          </datasources>
          <datasource-dependencies datasource='federated.1oqgssu19p11sn19fv0mc0g99tfr'>
            <column caption='Date' datatype='date' name='[Pivot Field Names]' role='dimension' type='ordinal' />
            <column caption='Monthly Retail Price' datatype='real' name='[Pivot Field Values]' role='measure' type='quantitative' />
            <column datatype='string' name='[Products]' role='dimension' type='nominal' />
            <column-instance column='[Pivot Field Values]' derivation='Avg' name='[avg:Pivot Field Values:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Products]' derivation='None' name='[none:Products:nk]' pivot='key' type='nominal' />
            <column-instance column='[Pivot Field Names]' derivation='Year' name='[yr:Pivot Field Names:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1oqgssu19p11sn19fv0mc0g99tfr].[none:Products:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Almonds, 200 grams 5&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Apple juice, 2 litres 5&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Apples, per kilogram 4&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Avocado, unit 4&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Baby food, 128 millilitres 5&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Bacon, 500 grams 5&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Bananas, per kilogram 4&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Beef rib cuts, per kilogram 4&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Beef stewing cuts, per kilogram 4&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Beef striploin cuts, per kilogram 4&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Beef top sirloin cuts, per kilogram 4&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Block cheese, 500 grams 5&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Broccoli, unit 4&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Brown rice, 900 grams  5&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Butter, 454 grams 4&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Cabbage, per kilogram 4&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Canned baked beans, 398 millilitres 5&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Canned beans and lentils, 540 millilitres 4&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Canned corn, 341 millilitres 5&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Canned peach, 398 millilitres 5&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1oqgssu19p11sn19fv0mc0g99tfr].[none:Products:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1oqgssu19p11sn19fv0mc0g99tfr].[none:Products:nk]' />
              <text column='[federated.1oqgssu19p11sn19fv0mc0g99tfr].[none:Products:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-mode' value='line-ends' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-line-first' value='false' />
                <format attr='mark-labels-line-last' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1oqgssu19p11sn19fv0mc0g99tfr].[avg:Pivot Field Values:qk]</rows>
        <cols>[federated.1oqgssu19p11sn19fv0mc0g99tfr].[yr:Pivot Field Names:ok]</cols>
      </table>
      <simple-id uuid='{27FCD288-7B38-4548-89B2-4660C2819B4C}' />
    </worksheet>
    <worksheet name='P 21-40'>
      <table>
        <view>
          <datasources>
            <datasource caption='Monthly average retail prices for selected products- Food_clean' name='federated.1oqgssu19p11sn19fv0mc0g99tfr' />
          </datasources>
          <datasource-dependencies datasource='federated.1oqgssu19p11sn19fv0mc0g99tfr'>
            <column caption='Date' datatype='date' name='[Pivot Field Names]' role='dimension' type='ordinal' />
            <column caption='Monthly Retail Price' datatype='real' name='[Pivot Field Values]' role='measure' type='quantitative' />
            <column datatype='string' name='[Products]' role='dimension' type='nominal' />
            <column-instance column='[Pivot Field Values]' derivation='Avg' name='[avg:Pivot Field Values:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Products]' derivation='None' name='[none:Products:nk]' pivot='key' type='nominal' />
            <column-instance column='[Pivot Field Names]' derivation='Year' name='[yr:Pivot Field Names:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1oqgssu19p11sn19fv0mc0g99tfr].[none:Products:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Canned pear, 398 millilitres 5&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Canned salmon, 213 grams 5&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Canned soup, 284 millilitres 5&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Canned tomatoes, 796 millilitres 5&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Canned tuna, 170 grams 4&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Canola oil, 3 litres 5&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Cantaloupe, unit 4&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Carrots, 1.36 kilograms 5&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Celery, unit 4&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Cereal, 400 grams 5&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Chicken breasts, per kilogram 4&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Chicken drumsticks, per kilogram 4&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Chicken thigh, per kilogram 4&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Cookies and sweet biscuits, 300 grams  5&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Crackers and crisp breads, 200 grams  4&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Cream, 1 litre 4&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Cucumber, unit 4&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Dried lentils, 900 grams 5&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Dry beans and legumes, 900 grams  5&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Dry or fresh pasta, 500 grams 5&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1oqgssu19p11sn19fv0mc0g99tfr].[none:Products:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1oqgssu19p11sn19fv0mc0g99tfr].[none:Products:nk]' />
              <text column='[federated.1oqgssu19p11sn19fv0mc0g99tfr].[none:Products:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='line-ends' />
                <format attr='mark-labels-line-first' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1oqgssu19p11sn19fv0mc0g99tfr].[avg:Pivot Field Values:qk]</rows>
        <cols>[federated.1oqgssu19p11sn19fv0mc0g99tfr].[yr:Pivot Field Names:ok]</cols>
      </table>
      <simple-id uuid='{47C60E36-ABB0-4DEE-BF31-0E6FAA8BD33C}' />
    </worksheet>
    <worksheet name='P101-106'>
      <table>
        <view>
          <datasources>
            <datasource caption='Monthly average retail prices for selected products- Food_clean' name='federated.1oqgssu19p11sn19fv0mc0g99tfr' />
          </datasources>
          <datasource-dependencies datasource='federated.1oqgssu19p11sn19fv0mc0g99tfr'>
            <column caption='Date' datatype='date' name='[Pivot Field Names]' role='dimension' type='ordinal' />
            <column caption='Monthly Retail Price' datatype='real' name='[Pivot Field Values]' role='measure' type='quantitative' />
            <column datatype='string' name='[Products]' role='dimension' type='nominal' />
            <column-instance column='[Pivot Field Values]' derivation='Avg' name='[avg:Pivot Field Values:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Products]' derivation='None' name='[none:Products:nk]' pivot='key' type='nominal' />
            <column-instance column='[Pivot Field Names]' derivation='Year' name='[yr:Pivot Field Names:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1oqgssu19p11sn19fv0mc0g99tfr].[none:Products:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;White bread, 675 grams 5&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;White rice, 2 kilograms 5&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;White sugar, 2 kilograms 5&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Whole chicken, per kilogram 4&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Wieners, 400 grams 5&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Yogurt, 500 grams 5&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1oqgssu19p11sn19fv0mc0g99tfr].[none:Products:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1oqgssu19p11sn19fv0mc0g99tfr].[none:Products:nk]' />
              <text column='[federated.1oqgssu19p11sn19fv0mc0g99tfr].[none:Products:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='line-ends' />
                <format attr='mark-labels-line-first' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1oqgssu19p11sn19fv0mc0g99tfr].[avg:Pivot Field Values:qk]</rows>
        <cols>[federated.1oqgssu19p11sn19fv0mc0g99tfr].[yr:Pivot Field Names:ok]</cols>
      </table>
      <simple-id uuid='{8A377237-A83C-41CD-94F2-B82740B889FB}' />
    </worksheet>
    <worksheet name='P41-60'>
      <table>
        <view>
          <datasources>
            <datasource caption='Monthly average retail prices for selected products- Food_clean' name='federated.1oqgssu19p11sn19fv0mc0g99tfr' />
          </datasources>
          <datasource-dependencies datasource='federated.1oqgssu19p11sn19fv0mc0g99tfr'>
            <column caption='Date' datatype='date' name='[Pivot Field Names]' role='dimension' type='ordinal' />
            <column caption='Monthly Retail Price' datatype='real' name='[Pivot Field Values]' role='measure' type='quantitative' />
            <column datatype='string' name='[Products]' role='dimension' type='nominal' />
            <column-instance column='[Pivot Field Values]' derivation='Avg' name='[avg:Pivot Field Values:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Products]' derivation='None' name='[none:Products:nk]' pivot='key' type='nominal' />
            <column-instance column='[Pivot Field Names]' derivation='Year' name='[yr:Pivot Field Names:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1oqgssu19p11sn19fv0mc0g99tfr].[none:Products:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Eggs, 1 dozen 4&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Flatbread and pita, 500 grams  5&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Frozen broccoli, 500 grams 4&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Frozen corn, 750 grams  5&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Frozen french fried potatoes, 750 grams 5&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Frozen green beans, 750 grams 5&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Frozen mixed vegetables, 750 grams  5&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Frozen peas, 750 grams 5&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Frozen pizza, 390 grams 5&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Frozen spinach, 300 grams 5&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Frozen strawberries, 600 grams 4&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Grapes, per kilogram 4&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Ground beef, per kilogram 4&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Hummus, 227 grams 5&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Iceberg lettuce, unit 4&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Infant formula, 900 grams  5&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Ketchup, 1 litre 5&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Lemons, unit 4&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Limes, unit 4&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Margarine, 907 grams 5&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1oqgssu19p11sn19fv0mc0g99tfr].[none:Products:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1oqgssu19p11sn19fv0mc0g99tfr].[none:Products:nk]' />
              <text column='[federated.1oqgssu19p11sn19fv0mc0g99tfr].[none:Products:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='line-ends' />
                <format attr='mark-labels-line-first' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1oqgssu19p11sn19fv0mc0g99tfr].[avg:Pivot Field Values:qk]</rows>
        <cols>[federated.1oqgssu19p11sn19fv0mc0g99tfr].[yr:Pivot Field Names:ok]</cols>
      </table>
      <simple-id uuid='{8CF15C2A-B31F-4061-8081-C3EE8E5573CB}' />
    </worksheet>
    <worksheet name='P61-80'>
      <table>
        <view>
          <datasources>
            <datasource caption='Monthly average retail prices for selected products- Food_clean' name='federated.1oqgssu19p11sn19fv0mc0g99tfr' />
          </datasources>
          <datasource-dependencies datasource='federated.1oqgssu19p11sn19fv0mc0g99tfr'>
            <column caption='Date' datatype='date' name='[Pivot Field Names]' role='dimension' type='ordinal' />
            <column caption='Monthly Retail Price' datatype='real' name='[Pivot Field Values]' role='measure' type='quantitative' />
            <column datatype='string' name='[Products]' role='dimension' type='nominal' />
            <column-instance column='[Pivot Field Values]' derivation='Avg' name='[avg:Pivot Field Values:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Products]' derivation='None' name='[none:Products:nk]' pivot='key' type='nominal' />
            <column-instance column='[Pivot Field Names]' derivation='Year' name='[yr:Pivot Field Names:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1oqgssu19p11sn19fv0mc0g99tfr].[none:Products:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Mayonnaise, 890 millilitres  5&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Meatless burgers, 226 grams 5&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Milk, 1 litre 4&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Milk, 2 litres 4&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Milk, 4 litres 4&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Mushrooms, 227 grams 5&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Nut milk, 1.89 litres 5&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Olive oil, 1 litre 5&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Onions, 1.36 kilograms 5&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Onions, per kilogram 4&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Orange juice, 2 litres 5&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Oranges, 1.36 kilograms 4 5&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Oranges, per kilogram 4&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Pasta sauce, 650 millilitres 5&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Peanut butter, 1 kilogram 5&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Peanuts, 450 grams 5&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Pears, per kilogram 4&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Peppers, per kilogram 4&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Pork loin cuts, per kilogram 4&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Pork rib cuts, per kilogram 4&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1oqgssu19p11sn19fv0mc0g99tfr].[none:Products:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1oqgssu19p11sn19fv0mc0g99tfr].[none:Products:nk]' />
              <text column='[federated.1oqgssu19p11sn19fv0mc0g99tfr].[none:Products:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='line-ends' />
                <format attr='mark-labels-line-first' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1oqgssu19p11sn19fv0mc0g99tfr].[avg:Pivot Field Values:qk]</rows>
        <cols>[federated.1oqgssu19p11sn19fv0mc0g99tfr].[yr:Pivot Field Names:ok]</cols>
      </table>
      <simple-id uuid='{564976E3-704D-4CCC-BDD2-375B91D27DDE}' />
    </worksheet>
    <worksheet name='P81-100'>
      <table>
        <view>
          <datasources>
            <datasource caption='Monthly average retail prices for selected products- Food_clean' name='federated.1oqgssu19p11sn19fv0mc0g99tfr' />
          </datasources>
          <datasource-dependencies datasource='federated.1oqgssu19p11sn19fv0mc0g99tfr'>
            <column caption='Date' datatype='date' name='[Pivot Field Names]' role='dimension' type='ordinal' />
            <column caption='Monthly Retail Price' datatype='real' name='[Pivot Field Values]' role='measure' type='quantitative' />
            <column datatype='string' name='[Products]' role='dimension' type='nominal' />
            <column-instance column='[Pivot Field Values]' derivation='Avg' name='[avg:Pivot Field Values:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Products]' derivation='None' name='[none:Products:nk]' pivot='key' type='nominal' />
            <column-instance column='[Pivot Field Names]' derivation='Year' name='[yr:Pivot Field Names:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1oqgssu19p11sn19fv0mc0g99tfr].[none:Products:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Pork shoulder cuts, per kilogram 4&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Potatoes, 4.54 kilograms 4&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Potatoes, per kilogram 4&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Roasted or ground coffee, 340 grams 5&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Romaine lettuce, unit 4&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Salad dressing, 475 millilitres 5&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Salad greens, 142 grams 5&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Salmon, per kilogram 4&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Salsa, 418 millilitres 5&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Shrimp, 300 grams 5&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Soy milk, 1.89 litres 5&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Squash, per kilogram 4&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Strawberries, 454 grams 5&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Sunflower seeds, 400 grams  5&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Sweet potatoes, per kilogram 4&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Tea (20 bags) 4&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Tofu, 350 grams  5&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Tomatoes, per kilogram 4&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Vegetable oil, 3 litres 5&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Wheat flour, 2.5 kilograms 5&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1oqgssu19p11sn19fv0mc0g99tfr].[none:Products:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1oqgssu19p11sn19fv0mc0g99tfr].[none:Products:nk]' />
              <text column='[federated.1oqgssu19p11sn19fv0mc0g99tfr].[none:Products:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-mode' value='line-ends' />
                <format attr='mark-labels-line-last' value='false' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-cull' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1oqgssu19p11sn19fv0mc0g99tfr].[avg:Pivot Field Values:qk]</rows>
        <cols>[federated.1oqgssu19p11sn19fv0mc0g99tfr].[yr:Pivot Field Names:ok]</cols>
      </table>
      <simple-id uuid='{D2BB026E-314A-4151-A4D6-BA07F70DDC74}' />
    </worksheet>
    <worksheet name='Tea'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Tea, Juice, Condiments</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Monthly average retail prices for selected products- Food_clean' name='federated.1oqgssu19p11sn19fv0mc0g99tfr' />
          </datasources>
          <datasource-dependencies datasource='federated.1oqgssu19p11sn19fv0mc0g99tfr'>
            <column caption='Date' datatype='date' name='[Pivot Field Names]' role='dimension' type='ordinal' />
            <column caption='Monthly Retail Price' datatype='real' name='[Pivot Field Values]' role='measure' type='quantitative' />
            <column datatype='string' name='[Products]' role='dimension' type='nominal' />
            <column-instance column='[Pivot Field Values]' derivation='Avg' name='[avg:Pivot Field Values:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Products]' derivation='None' name='[none:Products:nk]' pivot='key' type='nominal' />
            <column-instance column='[Pivot Field Names]' derivation='Year' name='[yr:Pivot Field Names:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1oqgssu19p11sn19fv0mc0g99tfr].[none:Products:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Apple juice, 2 litres 5&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Baby food, 128 millilitres 5&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Hummus, 227 grams 5&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Ketchup, 1 litre 5&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Mayonnaise, 890 millilitres  5&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Orange juice, 2 litres 5&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Pasta sauce, 650 millilitres 5&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Peanut butter, 1 kilogram 5&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Roasted or ground coffee, 340 grams 5&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Salad dressing, 475 millilitres 5&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Salad greens, 142 grams 5&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Salsa, 418 millilitres 5&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Tea (20 bags) 4&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1oqgssu19p11sn19fv0mc0g99tfr].[none:Products:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='field-labels-spanner'>
            <format attr='font-size' scope='cols' value='11' />
          </style-rule>
          <style-rule element='axis-title'>
            <format attr='font-size' field='[federated.1oqgssu19p11sn19fv0mc0g99tfr].[avg:Pivot Field Values:qk]' value='11' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1oqgssu19p11sn19fv0mc0g99tfr].[none:Products:nk]' />
              <text column='[federated.1oqgssu19p11sn19fv0mc0g99tfr].[none:Products:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1oqgssu19p11sn19fv0mc0g99tfr].[avg:Pivot Field Values:qk]</rows>
        <cols>[federated.1oqgssu19p11sn19fv0mc0g99tfr].[yr:Pivot Field Names:ok]</cols>
      </table>
      <simple-id uuid='{4803932A-D9C5-4E1E-9CD4-7606D0AA67D7}' />
    </worksheet>
    <worksheet name='Vegetables'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Vegetables</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Monthly average retail prices for selected products- Food_clean' name='federated.1oqgssu19p11sn19fv0mc0g99tfr' />
          </datasources>
          <datasource-dependencies datasource='federated.1oqgssu19p11sn19fv0mc0g99tfr'>
            <column caption='Date' datatype='date' name='[Pivot Field Names]' role='dimension' type='ordinal' />
            <column caption='Monthly Retail Price' datatype='real' name='[Pivot Field Values]' role='measure' type='quantitative' />
            <column datatype='string' name='[Products]' role='dimension' type='nominal' />
            <column-instance column='[Pivot Field Values]' derivation='Avg' name='[avg:Pivot Field Values:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Products]' derivation='None' name='[none:Products:nk]' pivot='key' type='nominal' />
            <column-instance column='[Pivot Field Names]' derivation='Year' name='[yr:Pivot Field Names:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1oqgssu19p11sn19fv0mc0g99tfr].[none:Products:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Broccoli, unit 4&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Cabbage, per kilogram 4&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Carrots, 1.36 kilograms 5&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Celery, unit 4&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Cucumber, unit 4&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Iceberg lettuce, unit 4&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Lemons, unit 4&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Limes, unit 4&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Mushrooms, 227 grams 5&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Onions, per kilogram 4&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Peppers, per kilogram 4&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Potatoes, per kilogram 4&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Romaine lettuce, unit 4&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Salad greens, 142 grams 5&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Squash, per kilogram 4&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Sweet potatoes, per kilogram 4&quot;' />
              <groupfilter function='member' level='[none:Products:nk]' member='&quot;Tomatoes, per kilogram 4&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1oqgssu19p11sn19fv0mc0g99tfr].[none:Products:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1oqgssu19p11sn19fv0mc0g99tfr].[avg:Pivot Field Values:qk]' scope='rows' value='Avg. Monthly Retail Price ($)' />
          </style-rule>
          <style-rule element='field-labels-spanner'>
            <format attr='font-size' scope='cols' value='11' />
          </style-rule>
          <style-rule element='axis-title'>
            <format attr='font-size' field='[federated.1oqgssu19p11sn19fv0mc0g99tfr].[avg:Pivot Field Values:qk]' value='11' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1oqgssu19p11sn19fv0mc0g99tfr].[none:Products:nk]' />
              <text column='[federated.1oqgssu19p11sn19fv0mc0g99tfr].[none:Products:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1oqgssu19p11sn19fv0mc0g99tfr].[avg:Pivot Field Values:qk]</rows>
        <cols>[federated.1oqgssu19p11sn19fv0mc0g99tfr].[yr:Pivot Field Names:ok]</cols>
      </table>
      <simple-id uuid='{8D8E789F-F14D-44ED-B809-93EFD427ADDF}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' name='P 1-20'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1oqgssu19p11sn19fv0mc0g99tfr].[none:Products:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1oqgssu19p11sn19fv0mc0g99tfr].[my:Pivot Field Names:ok]</field>
            <field>[federated.1oqgssu19p11sn19fv0mc0g99tfr].[none:Products:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{9205C576-E095-40EF-A761-F01724AB5ACA}' />
    </window>
    <window class='worksheet' name='P 21-40'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1oqgssu19p11sn19fv0mc0g99tfr].[none:Products:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1oqgssu19p11sn19fv0mc0g99tfr].[none:Products:nk]</field>
            <field>[federated.1oqgssu19p11sn19fv0mc0g99tfr].[yr:Pivot Field Names:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5979B26D-3237-4DF8-8644-3F57415E91E7}' />
    </window>
    <window class='worksheet' name='P41-60'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1oqgssu19p11sn19fv0mc0g99tfr].[none:Products:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1oqgssu19p11sn19fv0mc0g99tfr].[none:Products:nk]</field>
            <field>[federated.1oqgssu19p11sn19fv0mc0g99tfr].[yr:Pivot Field Names:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7686C151-9DCF-4ACE-A5BA-E921792A9E3E}' />
    </window>
    <window class='worksheet' name='P61-80'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1oqgssu19p11sn19fv0mc0g99tfr].[none:Products:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1oqgssu19p11sn19fv0mc0g99tfr].[none:Products:nk]</field>
            <field>[federated.1oqgssu19p11sn19fv0mc0g99tfr].[yr:Pivot Field Names:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{C2F631AA-5867-4B75-B4F3-309FCB2A2841}' />
    </window>
    <window class='worksheet' name='P81-100'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1oqgssu19p11sn19fv0mc0g99tfr].[none:Products:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1oqgssu19p11sn19fv0mc0g99tfr].[none:Products:nk]</field>
            <field>[federated.1oqgssu19p11sn19fv0mc0g99tfr].[yr:Pivot Field Names:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6395960C-2FF4-4E93-94D5-533C23DE1596}' />
    </window>
    <window class='worksheet' name='P101-106'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1oqgssu19p11sn19fv0mc0g99tfr].[none:Products:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1oqgssu19p11sn19fv0mc0g99tfr].[none:Products:nk]</field>
            <field>[federated.1oqgssu19p11sn19fv0mc0g99tfr].[yr:Pivot Field Names:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6BA3D84C-128B-4892-9059-7341344588E1}' />
    </window>
    <window class='worksheet' maximized='true' name='All Products'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1oqgssu19p11sn19fv0mc0g99tfr].[none:Products:nk]</field>
            <field>[federated.1oqgssu19p11sn19fv0mc0g99tfr].[yr:Pivot Field Names:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1E36EC65-C244-474F-B60D-B4F33E044357}' />
    </window>
    <window class='worksheet' name='Meats, Fish, Tofu'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1oqgssu19p11sn19fv0mc0g99tfr].[none:Products:nk]</field>
            <field>[federated.1oqgssu19p11sn19fv0mc0g99tfr].[yr:Pivot Field Names:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0994C4B9-AAAF-4B04-92D6-71BA961202F6}' />
    </window>
    <window class='worksheet' name='Fresh Fruit'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1oqgssu19p11sn19fv0mc0g99tfr].[none:Products:nk]</field>
            <field>[federated.1oqgssu19p11sn19fv0mc0g99tfr].[yr:Pivot Field Names:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F623CB1F-C209-4C01-84A6-A875CDC9ED6C}' />
    </window>
    <window class='worksheet' name='Vegetables'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1oqgssu19p11sn19fv0mc0g99tfr].[none:Products:nk]</field>
            <field>[federated.1oqgssu19p11sn19fv0mc0g99tfr].[yr:Pivot Field Names:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CB60280E-96CB-4BC7-BF57-8AF24710F295}' />
    </window>
    <window class='worksheet' name='Nuts'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1oqgssu19p11sn19fv0mc0g99tfr].[none:Products:nk]</field>
            <field>[federated.1oqgssu19p11sn19fv0mc0g99tfr].[yr:Pivot Field Names:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5D1BF38C-D5AB-4001-8B0C-DA3E7C3EEB66}' />
    </window>
    <window class='worksheet' name='Canned, frozen'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1oqgssu19p11sn19fv0mc0g99tfr].[none:Products:nk]</field>
            <field>[federated.1oqgssu19p11sn19fv0mc0g99tfr].[yr:Pivot Field Names:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5C5CD0D2-F143-4EA1-9182-FC562E21F3C4}' />
    </window>
    <window class='worksheet' name='Dairy'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1oqgssu19p11sn19fv0mc0g99tfr].[none:Products:nk]</field>
            <field>[federated.1oqgssu19p11sn19fv0mc0g99tfr].[yr:Pivot Field Names:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F501693C-C240-40E1-8AD2-F9C034BA18D8}' />
    </window>
    <window class='worksheet' name='Tea'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1oqgssu19p11sn19fv0mc0g99tfr].[none:Products:nk]</field>
            <field>[federated.1oqgssu19p11sn19fv0mc0g99tfr].[yr:Pivot Field Names:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F9AC2427-B4FE-4224-AB97-C987C8CA5FDE}' />
    </window>
    <window class='worksheet' name='Bread'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1oqgssu19p11sn19fv0mc0g99tfr].[none:Products:nk]</field>
            <field>[federated.1oqgssu19p11sn19fv0mc0g99tfr].[yr:Pivot Field Names:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{392B6A33-C736-472A-AB97-F2A83D616687}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='All Products' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO29a5AlR3bf9zuZWXXv7e55AQMMXgssMHjvg8v3igoGHWGRYUnmmpZWoh12
      hB0Ww5/82R/9yf7iD7bD4QhbVoTCIVph0WJQNrWkRS7XpMLWrnYXJoDFAhhgAAwweMwDg3n1
      696qzDz+kFl1696+Pd3APLu7/hM9VZWZlTdv3XNOnjx5zilRVaVHjwMKc7cH0KPH3UTPAD0O
      NHoG6HGg0TNAjwONngF6HGj0DNDjQKNngB4HGj0D9DjQuG0M0O+v9dgLuG0MEEK4XV336HHL
      0KtAPQ40egbocaDRM0CPA42bYwBVzn7wPn68xsv/34858/Gnt2hYPXrcGbibufmzT97jvbOX
      WLKWh595kYcOL9+qcfXocUfwhRlA44RXf/ouXj0T+zjnTv2Uc8v38zMvPEWMkRBCbwrtcc/j
      i88AUvDLf/VX+PjDswysosBoNMIYgzFJs3LupiaYHj1uO+R2RYR573sG6HHPo7cC9TjQ6Bmg
      x4FGzwA9DjR6BuhxoNEzQI8DjZ4Behxo9AzQ40CjZ4AeBxo9A/Q40OgZoMeBRs8APQ40egbo
      caDRM0CPA42eAXocaNxkSKTnJ6++xmRzlZdf+jHnL6/domH16HFn8MUd9lX55P132ahqzp8/
      xxPPfYVzH37IiWPPoqqoap8bqMc9jy/MADGOef3Nd9mcjBkMn+XIgwaRPgSyx97CTUeEXTj3
      CUeOrPD666d45KkXePj+Q0AfEdZjb6APiexxoNFbgXocaPQM0ONAo2eAHgcaPQP0ONDoGaDH
      gUbPAD0ONHoG6HGg0TNAjwONngF6HGj0DNDjQKNngB4HGj0D9DjQ6Bmgx4FGzwA9DjS++DvC
      VDn9xitcuh74yrOP8drb7/Ho48/w5KMP3Mrx9ehxW/GFGUBEOH78OJfXPmX12lVCtBw9cogY
      Y/+SvB57Bl84IEZV2dzc5OKZt7EPPs7xlZLX3zzDz//sVwEIIWCtvaWD7dHjVuOmQrYufPgu
      12WZ55Ydp069zZdPPo+ItPXd8x497kX0IZE9DjR6K1CPA42eAXocaPQM0ONAo2eAHgcaPQP0
      ONDoGaDHgUbPAD0ONHoG6HGg0TNAjwONHbdqV6+c5+J15fiREYePHKX3buixn7AjA3zvu98l
      Lt3P44cLnvnmr3OkvBPD6tHjzmBHFag0cOqVH/LDUxcY9M6dPfYZdnSGe+utUzz66Jc4//GH
      PPHM8xS7XDX0znA99gJ2JOc3fvoKYoV3Tr3Opr8TQ+rR485hRwb4xa+/wP/1nT/ixHO/wKGO
      /q+qvHfqNV56+adsrF/jL3/8Y85dXr2dY+3R45ZjWx0lBs+/+v4P2PzsAzbHyulTr/P8yScY
      FdM2Dzz0CKvvnuWjTz7hyRe+yrmzZ3mof0tkjz2EbRlAjOXrX/86P/rBNX79V34Jax3lgtal
      E6oQb+cYe/S4bdieAUQ4cuQIq+ff54d/OeLhBx/gyNH7mIb5Kuc++oD1UPD8Y4/x9qmf8shT
      KSRSRIgx9jHBPW47VBUUUM1/3fNs31EgToW0dgT2Da1AqpG3fvoy42BxgyWee/ZZil3SdG8F
      6rEbzJCf5v9UIUSoA+ojeA8+oHUAH8BHtPbQ1EVNRB1iIvQQQQRMZ9fWdJa7dnq+LYWqBv7F
      7/8uZy+t8zO/9lt884VHb+HX7rHfoT5kIvaJODPxTok4pDZ1gJAJPYRM1CERqbPgLOIsFPno
      LDiDjJYQZ8A5sCadFy4RvbO7Tsiw/SLY15THH+c//fav8b3vfQ9e7BngICFJ1ABBUe+nhOlD
      qqtSWVsXAlr5VkJjpCViMQZcJuiGkEuHLA2QIhO1NUjh2jaLcDuyjNxwEfzJqZf4b19+Be89
      b5/9lP/oP/wPWO5dIfYENGY1IiRJrDFOibjO0jcEqPL5vFSGRMBGwBjECthGImdpO3SYYpja
      WYuUSRpT2KSCiIAApOO9mCanT4tyl6Ax5sVZ1nljzMf0p40uG2Iq8yERdcxEHCMadFrfJfSm
      zEiHEGVKxI0UthbKrmrRIW5jEvE29xu5Jwn4ZrH9GiB4/vQPf49LG+l6cOh+/ubf+LcYHQCa
      3mpZ0CmhZouCxoYwM+E2qkFDgLlcfZghUIJO792OnrIlLUlWk4jRpuukTlgoXLK4uSylrW3b
      S6N+GDNdDBpJ9/aYwbYzgKpy+dKFdjY0tuD+++/vLqBviLs5A6gqjKu04JpTBRZZDGavFQ1h
      ygDQsU50ykwiPHEGJOu4mejE5mvJC7IZAs0qRb6/S6D7Xdrei9h+BoieH/zoJdbPn+bja8rw
      6Im9swYIkfD6WTTERIzzxNdIVpume7NF0maizfrvlEAz0e9WCvS457HjGuD1H/0FP37jDIND
      x/mtb/3mjCvEjdCvAXrsBexIoWcuXuORRx/i2NII7WflHvsMO87lTzzxFEW1xlsfX8P2DNBj
      n2HHGWA0Kvk3/sa3+eT9d4j9+y567DPckAHefOlf8nvf+TOeeeYFagp++7efuVPj6tHjjuCG
      DPD0136ZbwUljh7miYfv72OCe+w73JABisGQDz/8BJY24OoHFL/8Gxwd3Kmh9ehx+7HjInjo
      4M1XfsyPT1+e3QVW5Z03XuH73/8xVy6d4//9/vc58/Gnt3GoPXrcemw/A6gyXrvCE1/9Ff7q
      r/87nDv7Dj4wowadfOFr6JtvsXr9Gj4KRw73b4nssbdww53gf/q//x6PPPoQ//wP3uHR53+J
      335+ts2Z02/z6NPPIfUGJx59nNdef5tf+LmvY7LPSb8R1uNex7YqUIwBW1gO3fcIzsGzT9zf
      jSpDUarxOj995RXGPnLqjbd48uneStRjb2F7Z7gYePWlH7BWpWs3XOHnfvYblH1IZI+7DI0e
      4gTVGmKFxgoNm6ksjNG4iZgRUhxF7BCxS4gZgh0iMivzd/QFWltbY3l5+XN7J/YM0GMRNHpQ
      n4nXg9ZorNGwAWGTGNYhbKJhA22PY7QtX0dVEbLnbHMUh5gBYkbghqjfQOtrQADNrukoxi0n
      xnCHkOLIzjvBL/3LP+b8uuHkc1/hxedOsjzcC+6gPW4HVCOoBw2JkAkQazROUL+Oxk00jMGv
      E8Naks5hA/VrbRu0zi7lCkwJU+woSW07RNwKmAHGrSRiNUPELac2dhlMiUgBxk2PZitdpriO
      ND7CJDPTBlpfJfpVtL628wzw4duv8q9+9AqrFawsr/Cbf+tvs7ILj9B+Bri3kIg3koguSUVV
      n4l0M/+tp6NfzepEVwpvoLFKUpuAxjr3ExJB2oZAR0nlcCuJKO0SJhN00wZTIKZIZVJmgr47
      jmY3yAqhVNWEz65t8G/+zb/FoaWSMNnYdXLc/YpZeaGzR9Vty1WrRCzRJ4lEzNKzBmIiLg1J
      PYiT1E4jaJWIdb5eFbTKhBhT/8A0zKwJqmnUhPzDiQOxWRc2iSC7hGtHmOLY4i9vXNKlTZH1
      6gLMaE8H72w7A8Tg+YP/9e9zYS1dD488yL//23+HpT0QD6CqWYpVNMQ1JaA8bWvWP9uyKpf5
      TFQ+E6FfUF9lvTKrAxryVDttmz7XJwJGwBSARYwDMwAkE1CJYFK9WERcloyZUE2RiFfKfN3U
      m0TM822R1Kcps7QdTIm1xxbsqAJ9/7v/B29/fDUHxPzbeyIgRv0G62/9l4lgRbKemAhJxGYp
      6DLhdAktl+fzaZlJ03lzjxnkvhLRtm3NgvoZ3XR3knIvS9S9hh0Z4Ht/9if8lV/5VUQMw+Fw
      169IutszAOpJKkijAkBXPZiqCD0OMm6oAv2zf/wPeO/8GsuHVhgefoB/7+9+e0+oQD167BY3
      nAFiDPzwhz/gF3/xm7zxlz/gy9/4VQ7v0graM0CPvYAbUujrP/pz/viP/5w33jzN8UdP8kJP
      zz32EVT1xgzwtW/+NQYrx7i8VuOGK+wV586xr/nOGz+htI6VcsCR4YhDwyHL5YDDwyGltVgx
      GGMw/TpgX0E1knI4JeuehjHqV1G/Sqyvof5quq7T9Y4y/dWfvMrJ57+BLdwubRh3HwPr+LlH
      H+fq5iZr1YRzq9d469MLrE3GXJ+MMSKslAOWypKlcsChwYCjwyVWBoP0Vw45nBf8kr91v2C+
      M9CZvZRmH8XnDbnsEuHXpy4Tfn26URfSObEi+nUIG6jWiF3BlMeQ4gjGHQW3hF05gSuO7swA
      Vy98xEtrgeGR4zzz7PO7fj/A3YSI8NT9DyysU1U26or1qmJtMmZtMuHaeJNP11c5c/kSa9WE
      tcmYjapiZTBkZTDg8GDIocGQ5Xy+XA44PBpxqBxQ9uucHaHNPkrYmCPYzez/swZ+o7Mb3Zxv
      tk5u7W6zW8obdkt5824FsUuYwfG0Kde4TLhDGHcouVXcADuaQdevXuTVN97hqee/xoljhzpm
      UOX6Zxe4cN1z8okTfPDeBzz4pS+zPEgEsRcXwaqasyAqdYysV5OWQVYnY9arCVc3N9msKzaq
      io26QhAODQYcGg45MhyxUg5YGaTzpbJkVBSsDIZ7WtVSnfX5IU6y38/m1NcnS+dE4F2HtnU0
      TPI+yTD5+phh3n0eJv8ft5K9NpczAS/n+imxTwmv2d2+NbPyjgzwB//kf+HkC9/gzTdP861v
      /x2WGppW5cKF86xf+oxqYBktHeH6tQ2+9uLTwN5kgN1As/NWiErUyNh7ro83uT4epxmlwzSV
      91QhUAXPqCg5NEiq1Uo54MhoicODAUvlgKErGBUFw+L27NZq44KhVSLM6NG4mVSElog3pgQc
      x61PUFIpJoCZOp1J8uURk90ougTcELEZ5PKl1EZs6kPyH+aeUCt3plBVQlzwtkeBgVXWj9zH
      cljj2PGH2Fx9+54JiUweiNV84XyrtFjqlmhg6ssDxADMtcn+NwAlcFw9x22AJdJf7qcOHh8j
      dYisT66wXm2yNpmwvjrhw7rGiceKYI2lMIahMxwpC5bKgsODIc7YpDp0x9O4YMwMqIJ5HyWt
      IKxB2IQ4zhK02Qk3efd72PEBWkqEOzqWdrLNCOxyOppMwGKTH1DjhnGDVWFHg5+7AMhOeXcZ
      8UZWINXIR++/y9PPfYUzZz/i5Itfp+w4wmmMvPH667il+3j88Yf4yUs/4PhjTyfLyl0OidQw
      Zv2D/z775OzY+sbV2VVipkiKqXMZtO4Qs20chRgKYAQcdja9AWUZUiDeAMwhZohIQEyTdkPZ
      rDe4MvZcH4+ZBI8PgXGI1HGqAiwVJSvDFQ4NRxwaJAtXYUucGyLFIcSMsG65495RZkIutwSH
      7FeoKhPv2agrLm+sc3FtlQur17m8sX6DnWBf8T/81/8F5UNf4Zknn+D4gw/y4vO7XwTfdVeI
      sDErOSFPw12pJVuIOzmk3f2puQtVZRI8lfeM65qNuubaeCOpXXnRfn2cFu7OWpwx2M53mP8+
      hZ0+B2sE22GEovNmT9sxE8t8nUwF3Zb7pHOfQGGmdSKCy/d1zwGcsTNrJWdNa4UzIthtPs+Z
      OXVK4ep4g4trq1xcXeXS+hobdYWPgcODEQ+uHOL48goPrBzaaQ2gXPz4fV577TVeP3OJv/f3
      /pNdp0ffr2uAexkhRjbrmrGvmPgwU94VBnXnBeYxKkHjwrqgkRC79/mZupjrdMF9MU7NmXUn
      mDyqEvK1quI76rWPkdghRx9CO+qoiu/0063zcVbdNmI4NBjw4MrhltDvW1ri6Ghpholgh5jg
      7/3R73PdD1g+fIyvf+Nneei+w3vCGa7HwUZU3bXVbVslUFW58tmnXLxwnjOn3+RP/vS7bM6v
      IXv0uAfxeUzO/Uvyehxo7NoM8MGZ0+37wnr02C/YNQNsrK/37wfose+wo47yz373f+T8Gmxu
      bPKls9f4d//6r+HuLSthjx5fGDvOAMXRh/md3/kdfulnnueBYpXLm3diWD163BnsyABfun+F
      3//9f8pV7uORx05ydHQnhtWjx53BjirQ+XMfEc0hXnj+JE899sCeiQno0WM32HEG+NXf+E0e
      O2L5x7/7j1id3Ikh9ehx57DjPsD//cd/wKMvfpPHTxxjMBhhdmk36vcBeuwF3Hgn+OIn2GLA
      n/2f/xv/5A+/S3X3PVh79Lil2J4BQs0//Pv/Hasc5smnn+Lbv/Uthr1A77HPsL0znCrXL1/k
      1Juv8+pPXmPpoWf59rf++pQJVLl66RzrccSJw5ZXfnqK+x95kicfTbG4vQrU416DxggxoiFA
      CGgIu/cF8nWFseV0DaDK6uoan356kWNDxzW3zGPH78OaZCfqGaDHrqCaU1nqNKotxum1KhoV
      gkdrj04mqK/R2hM3N6D2aFWhdUWcTFJ97dHNzXS9sUGcTIhr66kuhNRXVaPB37wz3Hvvvssj
      D93Pe2c+ZKwl3/jKM6gqIYSZgIkeewRdcugkCejWaV0nCVpVmSD9LPHl8ziZQF2jPpfVNXFz
      M93fuQfvUZ+kctNvKvOprK4BkKJABoMUWecKzNIIcQUyKNs6MxiAc5ilpXQ9GiHDAWZ5BTMc
      QlEgZQFliQyGu4gJvsGDOv3mq3x04QrlcMj65ibHTpxoiV5V+xlgAbSu01Q8X17Nx/WSpuv8
      48+0jbElim37jopWE3RStRKyJc66RquqJdCWeBtC9T7d5/1cH+k+jEGMQcoyEaRziQjLRJxS
      DpBBmYmxQAqHGQyQ4RBz7FgiVufSvYNB6ieXUTjMcJiuy3La7jbR0r50hw5ra1z+n/9Bki4Z
      ScJsDWjQ2qdpsYsYFhNeCOC3usSq9+Bn+9ZtiFecY1FUkRTF1nKRxT+8MQvLZ/o2JhFRUWSi
      LLdIyynxZslZOMxgOCW6okukA6TM9xkzO9Ztzu+V0FJVZexrrm2OWZ2MWR2PuTbe5PLGxv5k
      AA2B8WuvzTAA1iFua0CzuALsXNC7Nal8Hs5uT3jzfRiDFAviR0VYuJ2+iFhEFpezDXHNE2L+
      kz2oioYYqUKgDoEQIxPvqfN1HTyb+XqjqtKxrhjXNRPvc9KzCVc3N7i8sc7VzU0EYVQUDArH
      qCg5PBxy39LS/mSAGCMfXbtKHUIbdO2MRSQdIQVct+XtdQrSng/A7rEVdQhEVSrv0zF4fIj4
      GKhzbLIPgbGvGdcpI8OkrtuEY5PaM/aeSae+zu03qqqNDbYmBcZbI5j8TgcjQukshbEslSWF
      TcehKxg4x7AoODwccnS0xP1LyxweDtt2zV8TNbYvlfSx9/w3f/E9VseTVih2JuaF98iCCyNC
      adMjGjiHEUlHYyizxG/LbVI/Bs5hjWkfctkcXcqt2q2HlMfUiGHgUjaK1F/qXyQFeIvQZm6w
      xkzL8zULjpCkaIgRn48pyD3iQ5whvrGv2WwJ0LNRTaXp2NfUIbJRTWbuCRpT+qGZpzgNkh84
      R2EswyIR5XJZUhjLoChYKkuOjEaccI5BUTB0jqVykHIj5frCWIyRmaM1BmtMynpxiwTUvpwB
      GnQzEKTMAbRZCOrQLZ9mHKhDTFYsjR0JB1WoUYWJTz9+kwVhkiXgJK8BxnWdJWIgaqTyASX1
      s+j+cSNBvUdRJnW3Pkk7AYyZpgfplotIZoim3qTXjiJETdnrmix26To9k4ErGBYuHZ3rSE+X
      s9W5VrI2knbYIdiGkUvrsCYJCmcMzqYkX3vFArgvZ4AGRgSTJW1h90BW3zlE1Tb9R8MwjerR
      MHQdA+i0vgq+zYpQWEtpLaVzLYEW1jJw7p5ZoN5t7OsZoEePnbA35qkePW4TegbocaCxL3UU
      DYHxT15LG1Rf5P7J/o/8WbR3cds+qyzB3P41hxiLFEXyFQoBqrz7nXe442ScdterunXj2J8M
      UFWs/flfoBsbX+h+GQx2brTHob6GcGcCPLSq8ru7bjNC2n0X59KmZbP73d3RbnbIBwPM8nK/
      CO5xsNGvAXocaPQM0ONAo2eAHgcaN8EAyubaFS5dXUdjzbtvv836pM+f3mNv4YszgMLaRsXV
      S+e58NH7lIcO8967Z27h0Hr0uP344mYaER548ASrq2uEqBy77wHWr129Z94S2aPHbnDTIZFn
      PrzAV7/2VX7y0r/mgS/dG2+JjDFy5p13qOsaYwyuSOMoivSKT5ddmhFpx2pzPIDkMunUSQ4q
      MZ3gEps3kZq2PfYOWiHtb0FQ/Ha4m/sA4/GY3/vdf0Q1GSfPyRyaWNd1cn2ua2LUFCvQvs1Q
      2pgAyS7H0gkmEGRL+/ljkSPAXJEYzFmHsWa2LjOfGEORn48ry9TGucRoxrTPrihLBMHYKePa
      5j7rMNZi85/k9juhqm78+liNkXqHXXTVSL0g5LOLEAJxPtx0QZuwIMy0i9pvE0etOjMG7z0x
      twveE3ygrivqumYyGVNVFZPxmGpSEWPE+3p/7gRbazl67BiT8fiG7ZrsFQAhJH99jZGQYwSa
      ukZiaD4C+BzxVE8mKBBDwOf2PjPavYr5Gat7veW885rU7doh0r7OFJmtS7NujlXoMDZk5u7U
      NYxtxOCKotOHa99pPN9H8/llORvCWhQlw9GQ0fISRe7LFUU7Y7dlix7QXocxhse+9Dj+C/oC
      7RbOWYy5N+MMrHNZraOdJRoUHeKyxmJs51293To7/X7GmJk+XCcAv1snIve8B0ArnFT3pwrU
      42BAY0Q1tkdU0ZDeiRyqCbGuCPWEUFUEXxOqMaGucl2Nr/erM1wYMzn/h2isEJN1YilzhoQC
      MCAGkZyKRFKbts7kKVdcbiuIOEDAFJ22dNrYPE03bQxi7t3H2xINyXtWVbdexwgomsNItVUJ
      A6i2+r0uuFZVtFUrc33bzk8/B4WoSQUNSW+PwRNjIHjfnkfv85rCp3Jft6pno6JGjcT8mc1n
      he6Yob021oEx+5MBwHLt4iqx3oCYFnwaq/TDhAlKzHG2CqIYaRZYERFFJCA5GL1VbUXnjvkW
      0dSkOQJitK1LbcvMaDYxkhiQhkkyI5kCycyHGFQNqKDkoyrNS9VVE6M1xxhJ6QMBjUkVSb+/
      dqQkxKC5LHT6IceyK6qS+50qBRqVEGbXQL5ORBdiQKPmBWX6nBgjMYT2nhgSYYYQ8T7k8Wg2
      lae/lnFQbDHCGJuMAXmRLyLTc2MwxuKKAWIEV5TYosRZh3UOVyaPT+eScHON8aFMHr7WueQ2
      nev2JQNMNjf5f/70LerJDRbBOWB82+os/ZpMB9LmP0jHxrrDXDkkJjFiyOs2RDbbNiIxZXmw
      iSeaYHfrEq+15W09bT7WRqNs8lIZm9zsU5tpP922DUxuP4VQlLa1SBnrsM5ibKcsE0ojPafP
      Zi4JmCqq823iTKY71emM0yJmhsS0TGdtlYWPpKMtEHGIyULJ5FlcumOQ6UwPScA0MzU2CZV2
      Rm7qBJVif64BVJXx+irB38BMl6XQttVZUm2H4Ot2Ou10mY6A75jutMmxmdso4KsUdBO1uWNa
      F2Mg1GmKb8YQmiSy+Z5k4UrXPira6cP7gGSrihqHcQXWOsQ6xJVYV2CsJWIQSWbXiEFsSj2C
      MUQEMSmlS5NZohlp6GTYi0p+jjGdN/lDcwqW6SPU1krWjlkbIZMgKEKcMUkbAlam9xkRDAEh
      zOQYs9RtzI2gFMZjjVBIpDCR0kQGNlJYZWACzkBp9uk+QB0ir116j4mvAINgiAohavuD1CFC
      VgF81PzDyTR1iqanWefsC0CHELJKojGdk5ipoeWYiSGpMDFLyDTF6xyRRG2IPBFx1PSjdom/
      NSpK/oDmdEvOo9nr7g878yPrLNk1F1vbd7MpmVTaMXkmNTCVNwmrrAiIUhiLszn5lDEYAWdS
      wjEjgrNCYUxaMgkUxmbVUXN6FcnnqS2iGISRtXj1WY3yqETUJ3UMAjGkPiK+ZYhIU5+/myg+
      1qD71Aw6CRNeu/Ln+FhRuPzDkQlYp9KrjtMZImogdKZx1Vmyaq9NlvSytXz+vm37YDYPrhHX
      Jr4qjKU0U1PkwA1aghvYEiPN7jQM3YAmR1Bppjb1wrj8XWP7PZt8SCF6fMypVbRu06sE9W2O
      pKA+M35q08xgkhmwGfq8WhiAOq+FJrm8bSOKqKRGojTLri4j2yysAIwabNYLnXHYrBMaMVhJ
      ZOtDRFVy2pjYEVpT4VYYSzO3TCFt/b6cAW4W6YfvTvNhZr3gtbP7GLvtIrHDRF59Sy7dukRk
      gakK4zvqTdq9jCESfaSqxgQf0BCpqopQ10QfiT4wqSctJwUzVSe0ITYAARsTEUAiLFFpywVB
      rMGqxTqLGMFgsdZhrGBJu9mI4EzexbYGKzYvVgUnKc+QcWndkP6aNqm9EYOR1L57rxHTEnfS
      75Oe392buJ3oGeBzQrOtOYY09UafzzPBRh8y8Yb2WnOb6COxntZriMS6e3+6R6xJi2xnElFZ
      05aZIm1cGWcRZxLR5jbGTevFGMQm4haT/ZvsLJE1fd7LqOqAD5HNSc2kDmxOUqrGqg5sjGvG
      lafyqTxdByofGJWO4cCxNChYGhasjEoGhWU0KBgNHMMy/e1LBlDVlpga4tOoU6INU+LcQoB1
      AO8JTduGYBuirUOa1pUOgU2llpi8UHNzBGmnxGwMGGdzmzkCNpKkerPAm3dbmLPIbMEOfjV3
      BHNp6Ks6pAS4E4/3gfXxlJjXxzXeBzYmNbWPiYhrz6RKZd7Hdu3UXRc1VDsoLGUm7OVBQeEM
      g9IxHleMxxM2xokxoqZ1yjBb0Brfrn3JAH51Db7zzxGfVQvtPjjF7JCh4Ma+nZ3HJVMHOSGp
      lVFm24bOdZTWVpOvpxq1AsE0q9NUuqUvQ/vLT/vK39loUoGb+qb9DlAUb3ZHAt7MfuZ2qM3u
      MkAEUaLs3KMC9ecY4+fB/tNRgFo8Pzx6lujyoqjzUKJoIrQMZfahzf/ItdEZjvCiqDRExkxf
      sIB5uvwyV7vFenOD325r29kSpzJzv2gq2wmp3e7UIBflhmNsUMSdPxfAqrArelUoFn0X6f6O
      glehiCU3EmEqswviW8IAfuMaL79+iuOPPNW+JfJuohwtYZ88Qe3TBtSga3EBrI39lcIAAA4m
      SURBVKZFqaKYGHAdtcLO0jtFawINbX1DLqLgqumCWHJZ1GT/FgXT/HAq6TybRyH9+FrXVH6S
      dqZj3nrWTnua9mCjEBS8KqIdJmj67bTtoiLMSm5JpsIZzFPiAkoPEql1jsvmP25e+i/ox0sg
      6GybZEZ1iFiMFDmuxOHMCGeXKNwINQMqhlRSUsmAypRMNJ9LySQaokjadGseB6G1+EDDAFPc
      EgZYvXKF+x99kscevH9G1bjRRtPtxMTXfOeNHzAJ22d4S7ubu5sutfFj2SWi7j4azgCF7H4h
      Kgiu2TJqmVOINBtpMtWXc1lpDDEKdYc5Jh39yMckPadfYEoWqrbzmMyUmFRSXXvP1NKU3Dha
      MQHa6S+atp0zI4QBhVnCmSGqNpmEzRBRh5D8r+ZpyfsIbKS/uQ2OqIGYzdtp7RBa0+rC53kr
      1gDj9au8/8HHbAR3b7wlMkzYePkfEua27NMKNf1oFkkbJabcunNkp3b4ZP92OGNndno12+qb
      zS8Vg2KY1AFRCD4yDkpUQ1Uny0TtA14NVVC8T+8OmNSRKLZtE6MyCTCuY34vgWESDT4KdRR8
      TMQe2nNp61TTDBFUiPk8NrOHgJPpBFF2fhprkzVJ88p7UDoiligGsY4qNPsAgrWtx1Prbg3k
      Da5kcTf53GigtIbhwFJaQ2mFpdJRWMPA5f2LwrYPdVhOGcVZk97ao2CttG/0QWGQg380Blze
      hNPaI0ScNcTK0+WMtBe0WC26NSpQNWF1fZ37HvryPfGWyDAZc/b0A6x7xRtLNJaAoULw1hER
      qgg+Qp3PJyrEGJn4SK1CrVArVJokaq1Q14GoUMf0F1UTUYdIVdfpxROSiK0QZZB3OUtRSoFC
      hEKUQsCJUIpjYBQDlGIoxVEIHBF4sC2H0ijOJQIuBQxKIUqZ2wxEcbaZTRQn6dwYQ3COyhRU
      tmDsSrxxVLagtgUTWzB26bxuyx1BDLGZlVQZhBoXPYNQU4aaMnjKUFEEzyDWDHyFjYEielys
      EyHGChMrRD0aA+IDRI+qJ3oPGlACGuo0u4Y6u0YEoq+yw16qR5MTnZEaEY9Icr1ITouNW0RA
      xGenxEWz9dyM1ZTuRyvQtc+u8J//T39CUNK7pTJRWgMum8GcASupzlko0q48LrcxRnAy2356
      Lql9lqrGpPt3yv/arV4URrPLteNCGJ2VeiZ6hIDRgKjHqEc0IJrKjNb5fNrOxDq3S+2N1p37
      61yWrm2sAcVohc2fJRoy0Sf1MopDxRLFolhUHFFcuhaHiiFKQRRLlCLNomIJUqK5TZAitxWi
      lART5L5se6+KJZgy9YFBu27oMemDNnokRiRfiyoS4v60AhkD/9nmKQpqjMQsMfIiVQLJfgPJ
      h2UqLUTijPQQM1WhhEC7f5/7ke36od7ST0vb6hHxaCsckiRDYx7frAOfdBeV2X0b0g9oOrvV
      OmfJSbp7WlSnc9O6T6dzm9wINHlIqlqiOlCHqkHVpT8cqiWqjqAOj6CxyHWCatF+lkaT/sSS
      5iZBRZLqOeOOkNcKU59yoksMAWBusJdx4/i7kP8Sc4a8CAoCQmxNxwoESabifckAZax4YOkv
      sNTtFyYTaCTRheS9gNadTeKM7T2pTeneaA3RpCiCmHXRCITmXGAi00dZi80RBwlV60AEQQxj
      RplAwGOzc1x6s1e3n2TdsZSt//50oYkaCnXYZl3SBvCXBCxWY/bDSUyQFpT5xXqEljnSPY5o
      IiYzdAC8CFEcYgqMGRDtCmqXiO4otRviiyNYO0LsiIErkzsDYDQRlUVxqlgNwASJaxi/ig3r
      mLCOhOsYvwZxE/WraIw4k3z2q6T6kxTX9AvZjruzoLgsYIIA+b5UnoNt8re2ZpCZRtv1T6IH
      wUixPxkAKbl033+MFCUhx6pGK0QjFJhEuM3DsDY5mEkkWIdK9h/tOM9HI6goDpk65wPk/iDp
      4Q3sFruDkjzQZ9G4fklnY85A+pzu1yFuKUube1u/uso0vYuK4CXNRUEcXoRKDJUIFYaxGGoR
      auOYiKHCMJG8NoqRkC09VgocSqnKSCOHVCk14mKkQBlopNSQypISgkYlzQNZFJgVKFeIara1
      vU3C4hoFJiFOTaqN+VUUI8pEI2oiq8GzFj3jGHAiLBnLknGJ7WP+y/slUYXa71MVaGwtnz33
      dYzrSo2tFqkm/clMGbLF/SBvnDNvVBUxXA+zG2ciQhSY/y0DsuWHVyNb2mluO48wNyZVnUbG
      dO4Omrf6M+F7UTyNi3bIJloP6gmaFqD1ZIN6MsGHyGRc5YiuHL0VIyUd1Y88Y5JiFJjzszSk
      mTTEFGnXkLsxYI3mxW+CY9YU7cS3r3HVvDbRtJlC4QJiY0v8pQ0pOk/AiuLITGHBuYgVZebt
      EPnnb4wSzd7JvmQAEcdHoxPEjrQ2jXG8A6OKSD1HborFz27gqOKotmzqGKkRO3svpibMEYyT
      MBP8IShWUoTU1Fquqd1UaSOFqeSgmnw0KHamLEncNqwzE6XDozQeqBFR3xKPQCcMFMxQkUOd
      BbTEll0lj2P6bHXm2uTPb2A7/X4hqGJU2zVKQiTmOIyY9XuNNjEyoBqyW3REtc5rne7m1yAx
      kvq0bomd7BY3N9p7E9EqUr234zb7dj/VomQqN//SpPnZ5t5Mp/K5sTAr3k7mrK3KYCtJpETN
      MM3Y4ubuykE3ZK/WRZ+9QC9sluCLsC8ZwOkm7tX/iuBnX5EUd+nzsi1UCDfbBxDizRN//Bx9
      bKd3x87uLUCNQzSpBz4zaDqmecCooRAhBfRDnsuSdBZDy9RS5BjgjiTOWTVSRF0iuzbTBsl9
      BG1CHgUrhia7gxGDnRMgKYZi9vuoxvaF57vFvmSAjc2aM5d/nkLnVRazWGDtGimkL/W1taP5
      dca881szBtfZQd1+bXLjfofFLAOIbG3TfL6zbuH3LqzbMkYjgluQ7EskffccuJndLCLGJKms
      zT9NR2uyrpXLIsn3qrA2q2Y67UsjFoNv5l5JO3lR48K5xGdTnp8LxBeEMLeZErWzP9N131CD
      quzPjbDx6nU2//UfJh26JYwkjcwWvxu3lcDEIDMqSkNMtkOcs0u/rWXd8i7miSvd07hNJ5Jo
      dPxkuAhMPVAhqWixo2sr4PHZ6JsWyDWeKBFrhCCBGg8SiUTGIcU2x6hUQaliRINSx/Tpktcr
      iuIktmsOAJvDI43AUKYLYgGcpuvCNOedp+ANZbPZ2Pn2pYmU7SbiNIRSsu1++pS6i+3ZdYd0
      nPvSXkqzHhIWs1DqYd8ugmtZZ3Xze1jtPiSTreCzsAuSV0mOPd3SVmZVBsissdCZbXEfbfKs
      heXNeWcBKgY7p8AMZLFG2+4FaPvf7Cd1vCRn7Kiiyc214U2dEhSdbBRNHw26YZ0o05jqmM87
      sQmqESKdcNCEWiNVh3HbsFGYcUBsvHfn2zXjaEfY6V/mzNldWLFbmHHfQGTAH127jOrtfd+v
      QM6ds4DQWawCLTK9wmKVKvUz23eMWR/HMr+NM9+HmMhkJtC/yzYdwhYQ01EnVKk1ZjMnzLDN
      Ll536lXnHbB3jVp1i2l4Z6Tv7WnG3H1m2403ld8SBti4epFXX3+b448/yzNfevBWdHlT8Os1
      V9ZepObG6bu3Q4w7/QLb7ELtArdK31SUIItduqfpVAS7wAFsNyMzcfGMufWzFtyracG88yem
      Xd4urO7mc9Pzn5cZxdyYW9WfZkaYHafILWKAy1ev8tVf+Ct8fOY0cPcZYGlpxG/II7uSVg2k
      MZDDjhbKRZnQdvchklSKz3/ndgNZOI6GKK3kJFOLrIX5v5RRzmx9VmbaRiS7TywcQlZvcm7U
      eXvT/HdNexZ5ZtFmy687wJSxzdxoP0GT7d/I9k9SpcTO1TfrCBUHYjHcop1gK7B2/Sr1boJQ
      7wDscIkjP/sLTNbXAYje7xjQInZ7uROD3/FFDzeCrytUFckuGJ/XEBXy/buBmGTp0qj4xv+o
      3uYFEzvoGjqT2S1lw+v2o1F3HJeGuIULQqiJIQI2p1Ccv6urtsUdx2nMNFV755MXtGzaNE5z
      t2gGeOhLT/L2qdM8efKZW9HdTSPGwCdnXmvTDzaJVb8obvZ+V6TkuLqNFN0J5fJo8abPLmE7
      L6m4GVhXtK+Iuql+bHFL0rHYorzp73XLzaAx59QMIcy8UKFHj3sRt9wKlHTOFMd510Ii7zIO
      OvPvpe9/WxgAONBvT+y+XfIgYi/99rdtJ/hO4rPzZ3n/3FWee/4ZPjx9isMPP8lhV/HZuvLA
      ivDG2+9jlo7y81999m4P9ZajHq/y5ptvc98jT1FWlzm3Bl85+QhnPviYLz91kotn3+bSBrz4
      wrMUO8Vs7kFc/+wcp8+c4+kXv8LFM2/ijj3GgyuGC1c2+fKjxzn1xhusPPgEjz9038L794WO
      Mlg5xuMPHOaTD04zOnGSKxc+QYoRvlpj+eiD/NzPvMChpaW7PczbBMvJZ5/l+mfnubgWOWE3
      +XSsOBOpo+fSlTGH7Zjrm3cnRc3thh0c4tmnHubSB29SrTzB5Mp5ginx9Sbr1y4iw+Nc+OSD
      be/fFwwwWbvGpl3moWPLuGKAMcLKyqHW6HX+k/OcePjEXR3j7UPk3CcXeOrJJ7DOMSwMWowY
      lBZixBrl+tjDXcrRdLsRxmt8uqZ8+eEjuHKEs4bh0grWCCvHHma5mHB9fXPb+/eFK8S5Tz5i
      wzuGJ5/i03de5tDDT3L29Bt8+PFFVu57CMpljoyKnTvag1i9fIHzlz7D2yFLus6pK/DVo5/y
      8nsfcnTTMrDK1YlhONgXsm4Lzp3/mGsbkdHy00w+fgV37FE++/A0H579mGK4wtUrl3n8iae2
      vf//B13+xrwxSLgfAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Bread' width='192'>
      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
      F+4bZ0QwAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Canned, frozen' width='192'>
      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
      8Nxq8cRjO0UAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Dairy' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO2dWZAcyXnff3lUVXdPz4EZYHAsAOLgYoE9ee1KpBWmKEXIkijJMkNByZYt
      O+wIP/pB9qPe7UdHOPxoO8JyiKQclmTapiiLpCSau9xdHiL3JLDYxWJxLI65Z3q668hMP2T2
      MYM5dsEBMIPOX6CRWVlZ1TUz/+/Lo/IQzjlHJDKkyAf9AJHIgyQaQGSoiQYQGWqiAUSGmmgA
      kaEmGkBkqIkGEBlqogFEhpr7ZgDxfVtkN3LfDMAYc7++KhL5wMQqUGSoiQYQGWqiAUSGmmgA
      kaEmGkBkqIkGEBlq9E7cZHn2fd68+C4tU+Nzn/k4s++8zqu3Wpw98ziHJps78RWRyD1hRwxg
      dOowZ0zFqpwAYLWwZEqitcIYg3OuF0Yiu4kdMQCc5dbcKqfOHKXT6dDcP82J0TbXr91g/7mT
      /S/TO/N1kchOsUNtAMex4yfQUlCZimazSWEUZ8+c2JnbRyL3CHG/JsVXVRVLgMiuI/YCRYaa
      aACRoSYaQGSoiQYQGWqiAUSGmmgAkaEmGkBkqIkGEBlqogFEhppoAJGhZkcMYHn2fV5++WW+
      /8p5AFbnb/LSiy8xv1ruxO0jkXvGjg2HfiZNuLbohxVduTnHJz75NBffeY/xR/1oUGttXBol
      suvYsdFp12/OcPgjZ/yBc1hrAYEQAuccQvh4JLKb2KH5ABWN0QPUE8ns3CzHHznAK6/8hMee
      fKYnfGstUsYmR2R3EYdDR4aa6JIjQ000gMhQEw0gMtREA4gMNdEAIkNNNIDIUBMNIDLURAOI
      DDXRACJDTTSAyFCzIwZgyzY//uH3eff6DAArt97j+Zde5sbcyk7cPhK5Z+zI4Jzb16/g0ibj
      ow0AZm/Nse/gISbHRrDW4sLo0DgcOrLb2JHBcLeuXGS+TFhcWOC5TzzD8sIcrdVlbi4anj57
      src8ulJqJ545EtkxdsQAbJXz5htvUJ98hPGGQtuct959n5OPPcHUaA2Io0Eju5M4HDoy1MRe
      oMhQEw0gMtREA4gMNdEAIkPNtgZw89Ysc/OL9+NZIpH7zrYG8Pr5i/zH//wlZmbn78fzRCL3
      lU37JVdaq/yXL/0Zb719mRPHj/DO5avsn9p3P58tErnnbGoAjXqN8dEmUgr+xe9+gfGx0fv5
      XJHIfWHTF2Ezc/NY61hdbXP0yCG0/umGMcQXYZHdSHwTHBlqtm0ELy/M8M6ly6x2tlrp2fH+
      e+9wc3YJ8MOj37rwNpXdqceMRO4Nm5YA+fJt/tf/+jpiZB/NmmZxfo76/uP8vc/9HOm62tDi
      jcu839YcP7SfRj3j4puvMTo5wdyy4NxHHwFiCRDZnWyuSJnyC7/2BfaNNrhx9RKisZ+GKmED
      c2m128zdWGBpaYnnnjmHUQnTBw6xsPAOxpjecOj7VNuKRD4wmxpAnnf41t98l2fPHuYrf/4D
      xhopv/HF32ZsgyumDhzk2u1FlNbMzs0y2VC88N2X+MiZp9fMAYglQGS3sakiy7zDjcsX+e8X
      LvILn/88F17+Dq1OsWHerLmPZ5/7mX7C5BQHjn50xx82EtlpNm0DlEXOwswNlm2Nk0enuXXr
      NvsmxlCqxt1M7IptgMgDwTn/sRasgTyHlRVotWC1tUUJsHKLv/jmt3nk5KOszt/g+uVLLNoa
      v/6rv0yc2Bi552zWXnQOqhKKEsoSigLKYiAsfZgXPl+77UW/2vKh1tAchZERaDS2eQ/gLJfO
      v8bV28ucfOwJHpme4G43OYolwJBjLZhqQLQllBXkHaiqteItioE8IX+R+3xFAUpBkoBOIE18
      PElDGD5p5sNGA2o1L/pGg/XVl21fhJmyw2KrZKSekmXZXf/80QD2KMZ44ZnKC9SYIMyiL8hi
      wAPn+dr0roCrCpT0Hrj7kcqHaeo/SeoFnaZewIPn0gwS7fNICd395oRYG/+QbKvI//OnX6Fd
      m+bRqTqPPvfzjCYf+jsePBfOw/dfBoT/pXbRml6RptbHB36pXa8h8F5n8Pr1ecDHRXjHqKT/
      g4FP691ro2tEP969Rsp18YFnGdxzbY0oBuJSBu9rfJWgHPjkuU/Li76g83xAzIWvckjR/24p
      /c+kgoizrC/eWg0m9q0Vru4KOglilf5+3WccFPADYFsDkElG69YlXpkd5bGf2S73LuXUaTh8
      2L/DqKp++mDcVP16pzH9uHObX9ONO+ev793LgA3Xl6UXIISGWDfufL7tvt+aza/Z6KVMN58Y
      yCIIIhN9L9oVb7e60GisSxvwwusNYNAo9zjbGsDZs49zNLeIpEZtr7Z+tYbRsQf9FDtLt2dj
      8LhnNAPp1vYFq/UD9ba7kW3N+Pw77/LkU0+yfO0iyxu/Bog8CLpVqO5H634DMMv6n3q979Wj
      +O9gWwM4uq/OV778FVq1I4zdfRs4EtmVbGoAzhpeefUVCgsHDhwgkyVltVnuSGRvskUJIJgY
      n2BxaZVDhw8zfWAKGUvQyEPGpgYgpOT48eOszN+mFCmjzZFNDaBcuM43vv08F9+7AcDM26/z
      1y/G5dEju58te4FM0UZmda5dusDczD6mDx5GbWAyeWFJtUCFaZOdypIpiVIqDoeO7Go2NQBn
      K/7sj/8bRmVMHX+MX3zuzKY3kfURTh0/xo2bNzm0r0lj8gDH6qu8//4NDpw92f+y+CY4ssvY
      tApkTUU6vp/P/sIvsXDlR9yamcVs4sBrjSZKSs6dewznHKNjYyBrnHv0xD167EhkZ9h0LJAz
      FX/x1S8z0/LH2egUv/arv0L9LodCxLFAkd1IXBUiMtRs0QYw/OC7f81ixx8njTF+9rln75gQ
      H4nsZbZwyYKxiSl0WA1FpY27ngsQiexWNi8BnOHCu1dp3XiLa4uO2sRBTn30DEksASJ7kMpW
      VKYkr3LyqkNpSkpTbt8GuHH5Ahcuv4+ujfKpT37irqtAsQ2wd6msH6ptncM6g8NhbHi/44wf
      DW79OBl/7PNZZ3vXGGv8fYC88vXqosp79ypNhXWG0vgqR2FynHMUpuiF1lkqU/a+ozAFDkdR
      5QCU4VxlKow1GFdRmpJ2uYqxBiEEUkikUEghEUJsPxz6+ZdeolPBeHOcyn2C9J78iocbY/ui
      soNxZwc+BmstVRBJUXUobYWxFUVVkFc5lS2prPdseZUHL9cViQ/zIJbKlhhreunGVgMCzbHO
      Upgw/Hedj3Rbxtbm78aUVCTSyy3VNQSQ6gyBQEmFljqEvpsx0xlCCBKVIkOYyIRG0kBKhRSC
      VKWAINN+lGaiEqQYvJdGK39NqrPwDAmJSlDdPNv9cY4cO83Me+e5Mb+86TzlvYq1BosLHssC
      fkNvn2Z76c45chNEEYRlnQnFaU5pSy9EE4QYitfKVlS2pKgKClOEtLIn1m4xbAe+yzqL6z5H
      iLsBQ5BCkqiETNfCH1qTqpRMZ0ghyXSNRCVoqcl0jVSnCATNbJQ1YpEJUioylSKEQEmNDgLN
      dK0nOgAtNUIIhJAoIUOownUKgehdq6QKnlYFbytRcvfWm7c0AOcc9XrG53/r93jrjR9tNv9o
      1/Pq9R/x/KW/6QmxslVPjNZaTCiirbPBM3qP2003tgqeSJLprC8enZHpDC294JIgRK2S4Gk0
      qcpopqOkOvX5VEKte41KSFWClklPcFolPZFrqVFC9TyjVhopHo6ZWLuFLQ3gtRf/kq989Zt8
      7/s/YnTqCCefuF+PtbNMjkxxaupRUp32ilIdxKmD50uUF3Wq0l6aVhotE9LgJSMPH9s2gudm
      bmBEneZIRr1Wu+svio3gyG5k2/L029/4c771ned543vPs7zJCum2vcALL77UGw7dmrvBiy++
      xFxrqyXVI5EHz7YuWacZN65d4EczU5z79MZ5WgsLJCOjHNzv9xC7cmueT33yGd565zITj57y
      DTxrMWtWNIhEHjxbGkBVtPn4sz/HmdUOQolNl0RMx6c4LjJ+cv4Cz378KYRzGFMBsld39r0I
      sR4d2V1sOR/gT7/8h1idUpLRsXV+7+Sjm+S2XL92jYOPnGJ2bpaPPDLNK6+d5+yTz/SEb61F
      PiRryUQeHjZtBJuyw1/85V/y6U9/hj/+0h/xm7/zTziwb+Ku5wXHRnBkN7L5fABreeOV77Hi
      XxyiayM8/eSTdz0WKBpAZDeybTfozZs3mJ4++FPX36MBRHYj2yryvTd/wLf+qsXo+D4+9TOf
      5tBk8348VyRyX9i2VWqtJe+sYpG88M2vsRCXR4w8RGxbBbr63mUOHjlGoiVVmSNUtuHSKNsR
      q0CR3cimirSm5Mv/6T9wI6xtVZs4yD/9x7/LSOzJjDxEbCpnqRL+0b/8fc4dm6Ber1PLsri4
      cOShY4spkY4i75BOHuef/drfQQhJFmswkYeMTdsA1lR87X/8IdcXSpIkIRvbzz/4jV+P6wJF
      Hiq2bQS//vqrPPHEU1y+8Br7Tz7JSDSAyEPE1hNiXvomX/rqNzj90cdIGvv44uknN837zo+/
      w0ztFM89doTbF1/ltZk25848Ht8bRHY1WxrAuU99ln8+cRiR1EhqDfQmjeDVxVuIxn4a2rep
      cyupKYEUIq4OHdnVbGkASmlefuFbjB44QdIYZ3r60IbvAFaWl7l14xq3TYsTB8doTOzjsE64
      ees20/tO9L8sVoEiu4xtFSmEIs0y0mzzBVGmj55m+shHyCv//mBsYh+l0xw9cGBHHzYS2Wm2
      NYBzj57kr15+jbOf+rtbvwGWGm8j/pYHD9Z35gkjew7n7EaJGxy6rfNskLbxvbbPM5jX2f7M
      xG0N4O3rs/z2P/wdvvfC87SrTzIaV8a6r/T+uCH0x87/cxZnDNZU2KrCVqWPmxCvSp9uqvU3
      xdq101OdMawXpF2X5uxa8XSvu0Nq1nKHlO1ao3CD+xqv+VkHvs8B7oNcZ+9cjMtuYIQAQiBU
      f0z/tgagyjbffeEFFtsyrgy9DVs18p21OFNhe4INYi2LvmjL0p8P55ypMGXpr7PGi73yeZw1
      2KpCKIXUGqk0UichDHGd9M4N4he0WrvnrZDqjn2EpVIwsCSykAKxblafkPqOEQJCrr0OAXL9
      4lhS3jHEXki/6Nad91rz8HfMLBRSrnt2EZ59ezafEOMcVVlgnWN1tUNjpEGapHc9HGIvvQfo
      ic0YnCkxVRnEVwVhmpBW9UJbVZiyGBDpWo/srEVIiVQJUimkThBKoXSCULqXJpVGJj4USqOS
      BKl8Xqk0KknDuXCPOD7lp2LzoRCm5N/9wb+icfTjnDp+iFpzH5/7+c9S2xsaXkO+skTr9vVe
      NaEn2q5YB6sOpV/KRUgZPl54XrwaIRVC94WrdIJMayQNjdJpT7RCSlSSrfHQIMK/INqBBQMi
      D4YtS4B2a5kr717knctXmWtZvvCF36R+lwbwIEuA1blbLF17ty/OXnVB9asKSve9b686IEIQ
      iuu4ssVDxxaKdFy68CpvX7mNlQnPfOxp0j06FLoxOU1jcvpBP0bkXuKs/1gDzvTjtgJTQNWB
      qg1Fa024RRWo4htf/9/IsWNoJZhbanPq5Akae9QIIg8I5/riDCtwe5EOxG0ZwgJMGT6FTzch
      rRcvfN4qB1cN5B3o6er1HIUeIyFBZ6DrkI6EsAn1yeHYJM85B9aBjFWYNfS6D11fqINxW3lv
      upEge8dl8LK5D6sQDgq2+102dKuuNwCpQSpQKcjEhyoZOE7WnpPKC1ro/jmVeqEL5c937yl0
      OLfx3/0DK7K92iKrj9z1ukAPkqUfv83Mt3+MTDQy0Yg0QTdrvjHbqKGyBFnPkKlG1VJkLUVl
      IaylILv1f+g2ZH/q9sAav+PWpW1wHHZp8cIrQrzse8+uUG018Ome6wrTDHjRrtcNIncGTLjO
      WX++K6ieIBOQaf94UJCqBomCkSyIb0DIUvc/QvWvFXJLce4kXSfoKkMxv0wxu0R+Y/aDlwB/
      842v8exnf5XGHhwObdo5nWszmLzEFiU2LzGrHVxlMK0cUxTYdoEtSkynwOYltlP4eKdAJMEw
      sgSZamSaoOoZohf353pGo0ukKJGqQskCKQqkLFGqRLhQJ3WmL9yuELtiHKwWuHBOhl6krqiE
      DCILouqKruf91h2rrO9lBz2rTPr5evdWfWHvUmzhu5ZdWfXjxvh4ZXCVxZYVptWhmFskvzFP
      MbNIMb+E1Jr0wATZoX3bG8A3v/olrszlWGs58fizfO5nn9pwt8jZK+eZEft57OgUK7PXefXC
      ZR596pPsb/pXxw/0PcD8Jbj5yjqRhfpjiDuzgVcNwrNWY02CsQnWKqxNMVXi053GmARrE6zN
      MJXEdEr/h8lLTF7iitL/Mdo5QjikdqjEIlWI1zSq2UTW6shGHVVvIEdGkFkN1RxB1mq+d6qW
      +lKsniLTBKk3Eeg98qi2MmAdtvTvQrAOW1W4wo/0dSHdGeuFWHph2sriihJnHbYog0BDvtLn
      s13RFv6dC+GcLared9oqiLs0iEQhhPShUggtfZdzOEYKpNaokRrp1BjZoUmy6QmyA/uQtST8
      mj7AHmFF0uSLX/z7/Oi732Zp5iIz7ac4sG6Yjy1a3JpdohofB+Dq7SWee/YTXHj7PSYHVoeu
      qmqDb7gPiBSyyeAt9do64mBxLUTwhgNFNvjqDqDX9N93RRaqROvdQnhl76vYIW4drjTYssSs
      5r7EWc2xeYEJJZDtFJTtAruwjOnMYts5ztjwh6/68cr6xw2lkcySXpXNV+F8tU7VUhBgS9MX
      XhU8pTFBzOGeRRCiMeE5K//MwYD921tAyd7bV6EkKOl/DVKBClVDJX11U3tBylQjpECmiU/T
      CpGm6LE6Qvt8UktEMGwhpS9hE39dL10pRKJ6v/P11VL/5xG9P816Z+BgzSrl2xpAw7b5kz/9
      E1wyyZMnH2Fkg7FA1y6/zcz8AosLkidOHkI4Q1EWEPaReuCL444d9p/dQNd5TH2Ia4LxYGyI
      2+AVvTHZdoHJfXWtX3XzxlXOLeEc3jN2hZdokhHfBpKJRijZF2nII7VCpIkXbaIRqe4LK7SJ
      eu0gsa5dtIHwdivbVoH+7//8I2rTj/HUE+eYGNtis+xylVsrFuVymqng1fOXOffk04xkvpje
      S0MhIsPDtgaQtxZ46fm/5lvfv8jv/+t/w1i2Ve7NiQYQ2Y1sawBf/5P/ipg4xcc+9jTT+8b2
      5GC42+/9Py6/8RWUrpOkTaRK0GkTpevopIlK6ihdRyV1dNJAqgydNtHJCEpn+I0+wkhFIRBC
      9cL4XmFvs+VYIGcN719+ixe++xLLcozf+a0v7Mlu0E7rNnM3foAt25TFCtYWVMUKpuqEsO0/
      5SpVuYo1/nxVtrCmQKoMqVKUriOlRukaUmWopIZStZ4B6XQEKdO+caVNlO6eb3jj0ik6afpz
      YaPn3rgjGKg7P9wv7dxG70H6J0PqZhNmHNb6AY0Oh6k6OGewpsC2VzFlB1vl2KKDy/M7vzvP
      e7facjTov/+3f8CpT/4KtbFRfvmX7l78D5qUBpPFCd+oqymE1r5HI0l8XIWuM62R2do6nnMW
      U3V6xuJsSVW0MKbjw6odzrepihWsKclXZ3rH3WtNtYop2xhTUJUtTNnCmtIbh6oF40lQ6QhK
      10Lp0y2ZauikiVRpz6h6xhXy6KTuS66kgeqVXFtjTYmzFdZWOFtiTAHO9sUUNgT3eUpsGIZg
      bYmzxgsPh606vqfP5OFaf19TdQCHqXIcFlvl4ffZBmcxYdd6awqcMyE/4X4WY3JwzodB6Djr
      n8OBsCKMyK0hkswPGxcKpVKE1Ei5vcPdsgS4cvFVXvze33Lp8lXOfPKzfP4Xf+6uJ8U8yBKg
      9fzzLH/t67iy9LOVjPFhVYExvlfFdLv//HDoriGILPPGkvpRpISfQQ6md40oTUPfdOK7Cnvp
      ScibAs7fUwjQCmtyjKwwtoMTlsrmGJtjbBtrC4wrMLbAuBzrynAu98emwEqLo8JSYU3ZM0bn
      TM84hFQ90Xphe8EJCziBcCCcABvCrrjc2uN+ejhnfK+etAKcWBMKIZEqQyQpSmUInaCSGkIl
      /jhJUdkIQmufnma+hM0yfz6ro9I6Mk19CZyF87UGUqWILPMfpXs90GKwi+YDlp4f6E2wqUqW
      lpYYHZ9is3cv2/HgxwLZ/jQ55/rzTQen2HXHDAE2997I5cEr5n6yiwvvMlze8a/WyyL0rVe4
      sghp/kWaK72B2aLwBld4z2V715b+3oW/B1XlpxyG53U2PHeY+hg6sf3PY4yfEhnmNjhjfPek
      9n3yKImhxLoSa0tE5bxwrfACktobrFLINPOGqhNEkiCzGiLRiLTm+9/TDFmre8ElCbIe4jpB
      ZF6cPUFmXpwyDe9VhBwYShKqe913CLugijcUg+H2Es7aNYbZG8jn7Lo06w3C2v6c2GCgzlgo
      yxCv/DTCQZFK6UWoQiNeKT/nQfn09dMeH2aiIncZd8y5fUDPMSxEA4jsGfyKEKytsnY/xoIJ
      b8kr36YjDPHw5yyE8UeYUB2ubDSAyL2jv6RL+K/XixmqdTaIsifYbjVuULS2NziOMBjPWddr
      J/n7hBuHcUlCK98WkhK06o9XqqXIbjx8ogFEemzZHLTew1INeNY1Au5+gpetjPfEQaTrPS+C
      vkC1b4+gRGiMq75IG/2xSiR+lCdKIaRYI+S7bbfsiAFUeYsLF95h+iOn2T/WoGjN88Zblzly
      4lGmJ0Z24isiHxLXrRYEIXaHL68V8LrjKvRAdfNXA4KFtYLrxoNYe8eJRmQDXrjbsB7I28u/
      C9iRXqCis0pe5Lz1znU+8bEneP/Cm6THTzORalSwzNgL9OHpiXiw/loa72VL0xd3UfbzlAbK
      yotWhS5H5bsihZQbVw3UNsda9Ud89jvde+yG7sy7ZUcUmdYSLv7kPLWmH+ObjTZ468c/ZN+h
      E5w+emC4l0fvTsVbUwUIwq28WH1oEKEqIYJ3FpXp95tL0RexkhCGLqMlYrQOSuKUnyDiVBD6
      4FBlBG7dMOUP/Ndw9kNk3lvsiAEsz86wUpSkRcHs3CzGGgSQJAlqcB3GPVoCuMFGm7G9uaW9
      KkaYbOI9b4gXVb9uzIDzFEHI3TptGKdPM/NVg1T7MPFDM3pj74MB7JYXSHuRyliWWjkLKx1u
      zK1wbWZpeF6E9V8orRVzr+67RsShDlyYvqD9TUJIEHGoHnRFnGhfdQjCJkwu8eKVvXC31H/3
      Ms45KmN7H2P9cVEa8rJiebWgU1TMLq5yfXaZm3Mtrs8uY6xDAPvHGxw7OD4cBmBvLWDem+n3
      GXe7z8J4HBFE7D1w4qsPXSF3QzlQPw5ijp74w+OcwzqHtQ5jHcZarHUUlSEvDKt5STsvaXVK
      Vjs+bLULVjslq3nZC1udkrIyGBMMwVqMsVjnyBJNo5bQrCWMjmR85OAEBydHOD49zsRojdF6
      ShLG9AyFAbiywq3m/frzYM9F5APhwvgpF+Y5d0NjLXlpvDA7Jcvtwgu0XdDJqyDWgpV2SV5U
      LK7mVJUhLw1lZWnnJaWxlJWhlmoaWUI9SxipJTRqPhyppzRqCY0s6YUj9ZQsUdSzhFqqyBJN
      LdVkyYebozEUBhC5E2sdnbKi3SlpF5X3ssHDrgSPO5je9cjtvKJdhDAvyQtDmqieOJv1lCxV
      jDUyapkX9EgtpVlPyFLN+EjmxZppasFT11NNPUuQD2DRqWgAe5zKWFbaBSurBa28ZHGlw1Ir
      Z7HVYXm1YGGl4wWdBw/cyukUFaudEq0l9dR70HrwvLVU0wwet55q732DR65nmtFGRpYomvWU
      kZrPt5nD3QtVxGgAuwjnHHlpaLULWqE60WoXPUEvtnIfX/HxlZAvSxS1TJMlmmaoMoyNZEw0
      a0yM1Gg2vIizVDM6UJ3Q2q967TuX/K6eQuwN4e4U0QDuIUVpKCpDq+N7JJZXC1baBYsrXtDz
      yx3aecliK2duuc1SK0cKQaIkWktSrajXEsZHMsZHajTrKftGa4w3a4yPZDTrKeMjGYlSaCVR
      SqDVnTuvRDZnuBT5U2Ct63WxFZWhnVcsrXqPvLSas7SSM7/SYanV986dogpd/96zZomvUow2
      UiZH6+wfr1PPxrzAmzX2NWukiSLVijTxDbsHUS8eJoayBOj2IXd7H4rSC3p5Ne9545XVgsVQ
      9VhY6dBqF6HbznfhOedohqrG2EjGWCNjYtR76cnROs16ymgjI02kr34kmjTZvWttDitDYQDv
      vr/AC69f6VU9FlY65KWhKCvy0nfJpVoxNpIxPpJ5ATfSNVWPiWbN151rSa+7Lnrnvc/ucMn3
      mOV2TlEZDk2N8NjxKfY1a9QyzUjNe/BmPUXHdwJDyVCUAJHIZuyIIleXZnjjJ29DbZxPPX2W
      6++8yaXrMxw+9SSnjuzbia+IRO4JO2IAjbFx6gpc3U9+WTGKz3zmM1y4+DbGjA33cOjIrmZH
      DKC1uERjaprb8wu0VidJXcmFt84jsqmHYjh05OFlR9oApsyZnVugOb4PgSFLNLNzS0ztn+rt
      KRbbAJHdSGwER4aa2PcXGWqiAUSGmmgAkaEmGkBkqIkGEBlqogFEhprYLxnZNfiJ935lB4fz
      +x4A1lksNpz36Q7n053FOINxFRZLaQocjsqWVK7COUvp/K4/xla9/P5aMxwGYJyhMJ1wJNZu
      pTOI2PRMuGbz4c9iu2s3maUlBv7f6Lqdnt3VFRGwTmSum+LPO3B4oRlrMa7CYamcobIF1t0p
      Mucsla0obdkToXUG40xIGzxvqVzlz1tDaQv/HOuE7p/NG0A37s95Y5FIlNQooVFCoYXf0DuR
      KVpqQJBIv7mdEhopJFokYa0xNRwGcH7hNb51/WsASARSbFzzE0IiN6kVCiE2PQegpGIzISux
      +UQYKSRik/v6cxvfUwr/h9+MRKa9K51zlK7E2Krn/cCFuAkiNz3xebE7TPCSEomUColES40W
      CVIItEjQUiOERMvEnxfax0VXmAolFA094sUndS+vkglKSJTQJDJBIJBCoYQMof7VvTcAAAWN
      SURBVEL24l7YSigkPs9WP/8HZSjeBDvnqJzf26tb9G2E91Z203N2k3NAuP/Gv8rKVndu+fkB
      7mu2ONf1pps/T9n7RgE9sao1YtI9j6lFgpIKgeyJUcn++YeVHVFke3mW19+8iMvGefaZs9x+
      61Vem21z7szjHJps7sRX/FQIIUjEHt3jNXJP2REDqDUnOfbIIUrlh0MXSGoSQPSGQcfh0JF7
      gilxJoeqAFvhyrYPTQ5lG6ocbBniHTAlVO2Q1tkZA1i8+S7v3lzh2NFRWq0WtfEJpoViZmaG
      Q5Mf6eWLg+GGB+esF5spcbYEU4HJcWGzbaocV7X9+XwFTIErQli2oeysOXZVG8p2ONfGlR0v
      5G4Hgwx7MUvtt2YVEqRGqBRUCkkNkTRAJYikDipF6PrOtAHKvM3C4jI6a1DPNImC+cUWE5OT
      6DAeOo4G3T044/cnJgjT2Qq6H1PhbAFVgStbXohVB4rVnld1xYoXoil9WN0pTFflAz1fg71Z
      Axtt6JoXYlL3okybCJVAOBZpsy9eXQedItJmX8BpE6QOixUnYavXpCd+ZLLt1klD0Qjezfg9
      fsPGGc6EuME500+zxovQFH3RDXpMU/a9Y9X2XtaU3suWq/5cFcRbtb03prv3sN+A23XjAAiE
      ziBpeLHpGiJtgMoQSc0Lb9CLJvXgYevQPdY1v4u7TLwYVfDGMgGp/LW7oHEdFTmA34azuyG1
      BQbivdB6oTkThJh7r1d2griKvjfsCTHEux6yHDg2RU/02Mrft+eRTT9dZ774VqkXmU77HlOl
      3mtqL0KhMkhHg4i7gsy8F+0eS+3vJ3UQa+qFqWv+nkPCUJQAdu4S1XsvQtUJjaRu0V2srVsG
      4TlThMZTiJsqeNoCTOEFJJT3eipb4/26dUxfTAfRDqT3BBi8J0kGQnvR6QwhfYjO+uLWGWKT
      dxeRn46hKAHs0nXszdeCsOoIlSLqk96L6joiqXlhyq7gaj5NJYhuPVXX+umRh4ahKAEikc2I
      5WpkqIkGEBlqogFEhpodMYD28izff/klXvnJJQDmrl/i+ee/w7W51k7cPhK5Z+yIAdSakzz2
      6ClG6ikAt5cLPvPpn2X59rWduH0kcs/YmRJgcYZbyxUnjh3GOYc0BUvL81hZ34nbRyL3jJ1p
      AwhYuHWNC5euMT8/z6mPnua992Y4c/rYjtw+ErlX3PP3ANba3nDowYVyI5HdwD1/M+U3iBO+
      arTNyLyHlWE2/t3+s98XAwCQcni374w/++792e/bUIj7hbMlb73xBrYxxfGpGm++c51zj59l
      9v2rjB44wsrNS1yfWWT66BlOHJl80I+7ozhbcfHNN6hqE5w4MMIbF69y9vGzLNy8Rn3yMGm1
      xE/evsajjz/FeOPhGvHpnOHtN1+nSMY5eWiMN9+6zKPnzrF8+zrp+EFqZonz797k7JNPMpL2
      S6SHzgCsLVhdLbl8+TJaOI4eneLKLctEwyLSUQ7uH2fu6kXK8eMcHE0f9OPuKM6WtFoFV668
      iwQeOXaAKzcLpkYFhgaLt68wNb2P2WXN2dOHH/Tj7ijOVaws51y/+i4gOHxsmms32hzYp+kU
      KYsz73HoyDTXb5c8de5E77qHrlIukNy6cZWjJ04jpSLNUpwTjI74UZzOVtxcsQ+d+D2SWzev
      cvj4aVT42bGC0RHfHV3LEmZmllBq89Ut9i6SmVtXmD52ikRJsizFORht+J/9o6dPMXN7hqJc
      uyLIQzc8s8qXuH5thvk2nJoe4ft/e5Gz585y/vxrdFydZv0kk9NHHvRj3hNsucy1q7eZbztO
      HWzygx9e4MzZs5z/yeu0yoTjj0yyMn+bIwcewu5ps8LVK7eZW7WcOjzB3/7wTT762DnOv/kG
      ix2JPn2E+cWcxz/2xJrL/j8bPRBtof4iYwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Fresh Fruit' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Meats, Fish, Tofu' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Nuts' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='P 1-20' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAgAElEQVR4nO29aXAdR57Y+cusqnfiAQ8nQYIHSEoiRYqSSFFSS93qVs/O0TOt2PXETKw9
      nhiHHbvrnQ/+MA7bMY6N3XWEJ9Z7h3djwo6J8DHe9sbO2uOOme65uqfdY7fUh6TWSUo8JN4H
      CJIAHh7wzqrKTH+oeu/VA0CAbAIgoJc/RCLPqspX9f/nVZlZwhhjsFh6FPmoM2CxPEqsAlh6
      GqsAlp7GfdQZsFgeBf/wN/4aZW+HVQBLb9I3/jh/7+/+97YJZOlhhLAKYOlN/GqZD9/7McK+
      B7D0Iq9/6+vcnA83RwG01khpKxvL1mNTpFJrvRmXsVgeGFssW3oaqwCWnsYqgKWnsQpg6Wms
      Alh6GqsAlp7m4eYC6YCPT52mFoSI9ADHD+/l3XffI9Bw+OmTDBfS65RNi2VjeLgXYcZgABU2
      efOt9zg4UWAxtZf9g5r3zk/x4vGjAIRhiOvaeXeWrcfDSaUQLM5O8eGpM6SG9+LX58kWs7he
      SBD4aK3bJgiCdcqyxbJ+PJQCGK3IFEb5wqs/xXs/+AHOvjHmSyVGhCGT7UNKiZTS1gCWLcvD
      KYAK+OTsxzQCQ2HXfiYmxln86BSn5wRPPfP0euXRYtkwNmUynK0BLFsVOwxq6WmsAlh6GqsA
      lp7GKoClp7EKYOlprAJYehqrAJaexiqApaexCmDpaawCWHoaqwCWnsYqgKWnsQpg6WmsAlh6
      GqsAlp7GKoClp7EKYOlprAJYehqrAJaexiqApaexCmDpaR5uqwZjmL1zk6s3bjOya5I9owVO
      nfqQQAt27z/E+HBhnbJpsWwMD1cDmJBG6PD0s89y/fzHVOrzkB3m5MmTVvgt24KH3hfIGM2N
      i2e5WZE8e3CEdz/8FMcR7H3iKcYH8+2tEYUQ65Vni2XdeOjNcc9+8Ba6fzdHDuwGo0FIjL/I
      j05d5PPPPwvYjbEsW5eH2xoxqHD+6h1273b58HSVfbv6+OTSTXTgs3P/k+uVR4tlw7BbI1p6
      GjsMaulprAJYehqrAJaexjbMLT2KwRirAJYeRDfvEJTeIZh/244CWXoD7c8RzL9LWHob7c/i
      DjyLN/iCVQDLZxcdLBCW3ycovY2u38TtP4Y7+Dxu4UkQLkII2wSyfLYwYZVg4RRh6W1U9TJO
      4RCp0S/jFp4CmUYIQag1txfmuVqaszWAZftjVJ1w4WOC+bdRlU9xcvtxB5/H638anBwAM9UK
      1+bnuDI3y41yib5Umj3FIasAlm2IMRhVI6x+Slh6h3DxLDK7C694EnfgWYRbYKHR5Ea5xJW5
      Ga6W5nCkYGd/kcmhYfYNDtOXSiOFWFsBSrcu8vU/+FMOPP0cOH381EsP/vlTqwCWnxhj0KqC
      bkyj69dRtauo+lVMsIhMj+EWT+AVT9Agz9TCAlfmZrlSmqUZBoz19TM5OMzk0DDFbA5XymWz
      kteUyt/72tf4/M+9xtTMAm+8f/onUgCL5X4wxmDCBXTzNqp2DV2/hqpdxaga0isiMxM4uUm8
      kS+hvRGmqz7XSiWuXP+U+XqNwWyevYNDfOXQUUb7CqQcZ81p+GsqwNFD+/mzP/s2t2cXeOYL
      X123H2vpbYwxmKCMbk6j6tfRtauo+jWM9pFuPzI7gZM/QGrky8j0GDgZQHKnssiZW7c4f+d9
      0q7LnuIQn9t3gF39RTKeh3zAdSdrNoFmb12nZlwcHaK9HLt3DD/wj7VNoN7GGI0J5tslu6pf
      RdeuYYxCev3IzG6c3D6c3D5kahicLEI47eMrzSYXZu5w+tZNaoHPweFRntq5i9F8AUc+3Gye
      NRXgt//X3+IX/+bfZYe+xT/8V3/Bb/2d//qBL2IVoHcwRiWE/WrclLkOGIRbQGb3RMKe3YtM
      DYGTQ4jlQhwoxY1yiY9u3eT6fImxvgLHdk4wOTRM2vXWLb9rSuWzT+7ha7/7uxRFmcefeGXd
      LmzZ/hgddgt7/Sq6fhMgEvbcHtz+p3DGv4r0BuOS/d4ltjGG2VqVc7dvcfbONJ50OLxjnFcO
      PM5AJrshy2rvXQPokPlKA6nqXLlyjUCk2LtvH6OD/Q98kY2oAXwVIhB4jrN2YstDY3QQC/t0
      XLJfRTduASDcfpzcXmRuH052TyzsufsW2Jrvc2nuLqdv3aRcrzM5NMxT4xOM9/fjyo19vveW
      ymaZH7x3gRFmOH9tFoDp+QZfffX5Dc3Q/fL2tSt8PD3FWF+B3cVBJgaKDGXzpF3XLsB/SIz2
      McE8qnGr3TnVjWkAhDeAk9uHV3wOmd2D9IoPJOwtQq25tVDmo+mbXJmbZTCb4+mdu9k/NELW
      8zbtGa7ZB/jOn36Dk6/+PIO51E98kY2oAUKlmG/UmCqXuVEucWuhTKgVA5ksuweG2F0cZCSf
      J59KW4VYAWM0RtUwYRUTzKGbd9DN2+jGLXTzLgDCK3Y6p5ndyFQR5E/eFDHGUG7UOXdnmjO3
      b6G14fCOcZ4cG2cwl3/gEZz1YE0FePvb/4bvXwn5hS8/T66vyN5dYw98kc3oBCutWWw2uL24
      yI3yHDfm56kHPlkvxcRAkT3FQXYU+imkMw89crA9MN1C7s/GQh4bfxZMSNQ57Uemx2Izjszu
      QnpFhMzAOghlIwy4OjfLqVs3makusntgiGM7J5gYKD7yJuyaCvDu9/+cK3cqOFJS3HWQV184
      9sAXeRSjQMYYqr7PbLXCjXKJ6/MlSvUaKcdhvDDQbjb1pzN49/HCZEtiTDTqouoYVUX7dzFd
      Ql6KhVwjvMGEkI8hUyMItx/h9iGEuy6CnkRpzd3KIh9NT3Fx9g65VJpj4xM8NjJGPpXaMvd7
      VQU4/cYf8YdvnEEFhv/2N36DnQOZZWnCoMnCQoVcYYBMyqFerdBUgoH+Plo/cSsMgxpj8FXI
      XK3GzXKJG/MlphcXkFIyksuzuzjI7oFBBnM5Mu7mtUHXxBiMCTGqgVEVdPNuV0luwnnQAcYY
      ZGpouZB7LSF3gI39TcYYKn6TT+7c5uPbU9QDn0Oj4xwZ38lovrB17mmCVRXg//if/kd+9W/9
      d9z4/u9xuf9l/stXDnUn0D5nPj5HOpfn+o07PH/8IO+dvsxA1pAbe5zHdkcvzbaCAqxEqDXz
      9RrTC2Wuz5e4WS4Ras1AJstEcZA9A4OM9hXIeR5yA5tNxhgwAUY1MeEi2r/TLeTBAmgfBIjU
      MDK9IyHkw4mSfPObE8YYAqW4Xi5xeuoGUwtldvYPcGznBHsHh0g5W++5J1lVAX77f/771NxR
      ajPXKFHkc698mb/62qvL0jUq87z1/ln2j6XQw0fYW1C8efoiLz33NMYYlFI422C40gCLjTq3
      K4vcmC9xo1yi0mzSl86wa2CA3QOD7OofIOelfrJ+hAlA+/F8lyVCHi6iVR0Q3aV4egzpDSG8
      AYTbx0aX4veLNoZSvcbHt6f49M4dHCl4aucEh0Z3UEgvbylsVVZVABWG6ES0EBLX7RbkmZuX
      OHNlhhPPHad05UPM2DH29IX88MNPefnkM2itUUptaAkaYSJjTMeNiawlcWZpWqPBhBijIDbG
      hGAUjaDBTHWBm/OzlGoLKBUwmEmzq9DHzkIfrjTtY5LHYRRGq6gNrn10UAJVBV1HOqm2cItU
      bHuD4PaDzG3wfXo46oHPpzN3+Hj6Fot+k8dHxziyYydj+cIWUc0H46HWA5iwznf/41s8/+LJ
      6IWFP8eHF+fZXdRUnFGO7B8HNuhF2Mz3CObfiYVNR21lNG2BRscCrsFojLlXnAEhQTjxMjkn
      djtx59BZOU66NELN1GKFxWZAoA2uk2Ksf5CRvgHSbhohW8d4yNQQwhuKx8035q3mRhEqxc2F
      eU7fusnV0iyj+WhawoHhUdJbsGn7INxbAeqz/M7v/n80fNUO2vHYcX7ltS+1/UYFXLl8mWao
      cbwsBw7uZeHuLeYbksk94xvaCdaN22j/TiSQtARTxgIn47CEXzjAEn+c7mGEURtDqVZjerHM
      jfkS18slGkHAUC7HxEDUsW690RTQvpYAECIKS7hJpHmU6HjM/sz0FOfuTGOM4ej4BE/uGN+w
      aQmPgnsrgFHUGj4YjdZREul45LLpB77IVu0EbwTR8GuT6cWFdj/ibiUaRpZCIIXockcm9kuB
      IySOjI0QuDLhlxJXLPFL2XXMiv5lxwoEIupUk1RICJXm0uxdTk/f5E5lkceGRzk6PsHugeIm
      NGM3n3srQPUO//Z7ZxnTt/jw4m0Axh57ll/56pdWTL4avaQAKxFqTagUypioT2Q0SuslftMJ
      73JrQt1Kn3C34ky3f6WwpcdrbRBC4MhYIYVEykgR64Efz7zczeMjY2S89Zt5uRVZsw9gjCYM
      o2bQSp3g+6HXFWCrYYxBG9NWCqU7blc6FNK9M31kTan8i3/3L/iD739Enwf5x77I//Drv7QZ
      +bJsIEIInLgp1uusqQCnLt7iF/+L/5x9u3fwtT95azPyZLFsGmsqwGs//3N4Q+N86+v/hhee
      +9nNyJPFsmmsWQf+4Z99m3xxnP/q136ZH75lawDLZ4tVa4A//r3f4c2332Nm4bdIOZJXX/sr
      m5Uvi2VTWHMU6NrlT5mZmWNgZAdeusDeXXZXCMtnhzWbQG9+5w85feYMp86e5V/+/jc3I08W
      y6axpgI0Gj5DI8NMXb2M426fWX4Wy/2wZhPIr5V5/Xvfo6IyfO7lzzE+tDV2hbBY1oNVa4Ar
      H/2Q3/6n/4yKt4On9mT5+p/8h83Kl8WyKayqAN/45rf5S7/61/noW/+cf/v6JX7tl39hs/Jl
      sWwKqypAvbHA6//+z7leajJScHnr/Y82K18Wy6awah9g9s4UizW/7U/n+tk5NvTAF7F9AMtW
      xX4hxtLTrCmVP/ruH6MH9vHsU4fIZ37y3eEslkeB0RrTaKAbjciu1lDlMrpcRpXLa9cAi/Mz
      nH7/Hb73+vdxinv4hdde4+iBiQfaR8nWAJb1xGiNqTfQjTqm0URXFlHlMqq8gJqPhXuhHLkr
      leigeMmbSKVwBvpxBgZwBgbWrgGuXb5AKDM8duQER54+ynvf/y57J36V/szW3+bEsj0wSrVL
      aV2toubmULNzqHI53rwgTlOvo2s1TLOJSKcRmQwyk4HkljtC4E3sIn3kSZziALJQQGaymHQK
      5XmEUhJqRaA0vlar1AB+hb94/UfUm3679O7fsY+Xnj38wD/Q1gA9ijFxE6S5RLhnCWO7JehG
      haA1SIkzOIg7PIwzNIQzPIw7PIQzOIjM9yFyWeqOQ6leZ6ZaoRb41P2AWuBT833qQRCH+dSC
      oB0WKBV9lgmDMfGqOMwqNYB02TE+Tqh0Oyg3sPwtsDGGWq1OLp8DoymXSgRKky8UyWU+2+tJ
      e5qWcDeb6EYTXa20S+5wdrYt6Kq8gAlDUGEs3EORQA8Pkzp4EPeFFyLh7ssj83lEJoOIV6pp
      Y6g2m9yuVbk0M8OFqRtcmp1hrlZDac1wPk9fKkU2lSLnpch6HrlUiqFcjlwqRdZLkUt55LwU
      adfFc1xSjoPnOKRcB89x1+4DXDz1I3546hJSwPDew3zllecSsZpL5z7m3OW7/MzP/xTUSvzg
      3TNM7plgcHScgXw0d8jWANuMhHCbpo+uVghnY4GeiwV8dg61sIAJAggCcCTO0BDu0DDO8PKS
      W/blEdl7b6eitKbqN7lbqXBx5i4XZma4NDtDuV4HYHJoiIMjoxwcGWV3schIvm9ddpZeUyq/
      9a1v8+Jrv8bOgQxeJr8kVnLg8DEq1fcA8BuL1CoNypUG4xNeVOXERmu9/OSWzUMpjFIQhhCG
      6GYTvVhBLy6iFxdRLbtcjkrvhcWodPeb4Di4cXPEGRrCm5wk89wJnOIgstCH7OtDZrNrZqEl
      C0prakHA9OICF2bucvHuXa7MzTJfr+NKwYHhEQ6OjPG5fZPsGhhgJN+34rcD1kOm7l0DNMv8
      wR//Oec/eBt31xF2D2YZ2nOIn/388WVJT737Hk8+d4KowWOozt3ig8slXj5xpL014nbYG3Q7
      YIwBraNmRRi2O5CRAFe6hDnpNs0mBCGEASYIEVIg+wo4hQKyvxC5+/uQhf6oBC8WEX2RcPMT
      7hJhjCHUmqrvc3O+FAn7zAzX5udYaDbpS6U5ODLCwZFRDgyPMF7op5jNbuqHMu5dA7hZnn/h
      RR4/dJh8Xz8SRcMseQ9gDLValXqjQaVSRdTLlAOXlL9IJq7uHMfBGGMVYAU6wqxALRXmpBB3
      l9Sm0cT4PsZvon0fISSyEAtzbJxCH6l9+9p+mc8hszlkLhs1RdZ5j/7WLtFV3+daaY4LM3e5
      MHOXG/Ml5ut1BrM5HhsZ5ciuXbz21DF2DRTpz2Qe+fYrq/YBGvUa/+f//o/41f/mb9PvT/G/
      /f8/4H/5zV/vJDCKa5cvU/NDpOsxObmf2elrNHSafXt2IuPf9ij7AO2ft5ptTLyH7spxyTDT
      Cms1KZTCKA265deRrRPxQYiuVe8hzI1olKTZjIb3HCchxIWoibFEuGU+h8xFRmRzyJS37h+4
      WI2WsC82m1yem+Hi3ajNPlWeZ75eZ7y/n4Mjozw2Msrk0BATxSI5b+t8FCPJqgrwnT/4Gv/q
      9/+Ew0+dIO05fOErv8TLx/Y/8EU2QgFqP36HxunTCUHU0W7MagVB1Bp0tDFu263jDXNjv9HR
      Jrpt94r+2A0IxwFHIqQDjtPxOw7Ilt9BOBLhuIh8HicW5i6BzueQuXxbqNnED8TdD9GHRRTl
      ep1LszNxM+YutxbKLDQa7CkO8ljcOZ0cGmZXcYDMOn7Hd6NZVSp/5hf/GiNjO7lwawFHCpq1
      xc3K15o4/QW8nTsjIZNyFSGUkVvKjsC23XGcI6OwhLt9TrlCnBCbWuJuBsnd4mZr1bagX5qZ
      4Wa5TCMImBwe5rGRUb78+BNMDg2zs3/gkX/j62FZs1h+43uvc+Irf5nx/gzp/MBm5Om+SB86
      RPrQobUT9jDtETgi4W4EAXO1GvO1GqV6jVKtHts15us1FpsN5qo1EHBwOOqcfuXJo0wODbOj
      UPhM7iS3pgJMDOd474PT7BvOUdx1kD07RzcjX2ui44cL0VZ/yfJ4KzUh1hsT91dadjMMmE8I
      ctuO3QuNBguNOguNBsbAYC4XmWzH3lMsUszmKGazDOXzDOfyn+l7mGTNF2G3b16ltBi9jMgU
      Bpmc2PHAF9mIPsDX3n6L73xylozrkXFdMp5H2vXIeC5ZzyPreWRcL3anyHituNSy+ExsWsNv
      Kz36jRSI5CMwQKBUlzDPLxHq+XqdcqNOuV4n1JpiNtsR6IRwt4S6ZW/mB6i3C2sqwOUPX+df
      f/N1pNF86S/9Gq88vTU6wUHcMasHAY0wiOzY1BP+pL1i2jh9MwhJOU5bGVqKkY2VqxW2smIt
      De+EuU70YYxWfpcJdduut5smzTBkICnU2RzFXI6h2B7MZtsCvpU+ObodWVMqv/HH3+Vv/K3f
      ZIe6xT/4l9/mlad/fa1DNgXPcRjp63ugY1bTdQM0Y2XoUpglitMKu1OpdMUlla8RhO0wAEdK
      lNYUMpmuEnkwm2O0r8ATozu6Su9CJo1YUg9ZId8Y1lSAL774FL/zf/9jsqbKyS/98mbkacNY
      TYgEkI0nVj0IS5svcWDbHSiFr0KyXgopRFd/xQr1o2fVJtCdqWuUqw18v4nBoX9wlL27HrwT
      bCfDWbYqq0rl7/+Lf8ynlQKfe/44/bk0A01+IgWwWLYqq9YAgd/g2sXzvPfBKeoh7Dl0gi+/
      cPSBL2JrAMtWZVWpFBgajQbNIKSyWMMPw83Kl8WyKayqAP/kH/0ml+tFXjh+jH2TO+izK7ws
      nzFWbQKV5+5SbQRtfyqTZ2TowadD2CaQZatiN8ay9DT3P7upWebP33h7A7NisWw+968ATobH
      J3dvYFYsls1nzXbJ29/9Jh9cvoPQIaEWHHzqBX7688fbq70slu3MmjXAO++f4gs//Qu89upJ
      7tQEb3/n97mz6K91mMWyLVizBnhycgff+MYfMSLK9A8fwjMzn8mFEZbeZM1RoLm708wvVMBJ
      s2f3TurVGn39/Q/UBLKjQJatyppSeeGjd3jz1Kf0DY3z/EuvcOwx2xG2fHZYsy1z7IUv8p99
      8SWq05/yR9/90bJ4v17h3PkLKKJtq69eOMMHH53DV3YnOMvWZ80m0Bvf+joL7ijPHX+GscF+
      ZFfbR3P9yhWuXr/Ni6+8RG36IhdKHo8NaS7OGk4ciVaP2SaQZauyhlQanv/iz3H1wln+9N/9
      a8TIIf7GL/1MIl6yZ/IApdl5AMqlWcbGn6W/L6R+9RO01m0TBMHKl7BYHiGrKsA3/99/yid3
      FY/tHuGDac3/9Td/etWTpVJpqr6PVhrHdZBSIqW0NYBly7KqVI6OT3Bl5jJzpRK+36Te9Mln
      0p0EOuTcmY+5fPUqTcflyOP7ufDuu9wSgoNHT2503i2Wh+Y+JsMZ5u9M8eO332SGYX7ltVcf
      +CK2BrBsVexsUEtPY1/pWnoaqwCWnsYqgKWnsQpg6WmsAlh6GqsAlp7GKoClp7EKYOlprAJY
      ehqrAJaexiqApaexCmDpaawCWHoaqwCWnsYqgKWnsQpg6VmMMWvvC2SxrAvGdIzWCVuDNh27
      HaZBqZWNbrmXHh+5tdEEQuELhS9DajKk6oZUnYCqDKiaGlUaVGlYBdiWtBbxJYUq6cdE32w1
      Jv6Mq+lyJ20Tp40+7GowWrcFzMQCZ3RH+EwsgEaFy+OWHBelU6DC+LyRwBrTyk+sCEZH8Sa+
      vtEYAcZxMI7ESAkJd2QLAlQkzKpGVfpUPUXV09Q9Da4HrgueR8bNkfcK5N0+8s4Ag2TIiwx5
      kdvGSyI/OQ/XrkLyW7ttt6DznemO28TxRoAWkb3U3fGLrjgtDEqAkqCkQUti/5LwhFsJUGi0
      URgTbQ9jYreJH7qJBcKQcBuNSQiobvnbf8TxOnYvSZ9wG1ZQksixkrXifXs4d/RcTPL5LLWX
      XFvEf9D6rnL8J+IwQAiJJ71IqN0Cea9j59w+UjJFSqbxnBQSec9vMm/bGuBqrsKNwvVYwDQK
      hUJ3G6PQaJQw7TCNiW68FJFCxMbEYW13VxgI4eB0GRdHOEi5PMwRDrIVhotrXCQCYToPsuuv
      5Rcy+ph2/MCEkLERCOEgpOwOax8ro/MnzrP0OkDHFkvCkv6Eu32EWHaGWHaXhcay3x2eTC/u
      cd6l+dss1lUBjNGU50uEypArDJBLb9xH9fRAP7j7SbUETbYEz10iqA5SdocJBDIWJIlc4hYr
      hicfuOWzw7o2gYJaiR+8e4bJPRMMjowz0JcB7K4QWwETt/ONNmgTmaj/mPTHdru1FDe34gCt
      DcoYtI6NWWLHbrUsTC9Lr9Y4x0q26nJrlDa4UrRrknYt025KdWqTZXHxMesqlX5jkVqlQbnS
      YHzCi9uzkdG6NzfLNdB+sMZ0BKzbjoVCGYJQESgd2WHCVvfy65WPWeEcSusuQdcJZYjy18lP
      q2McO8EYhBRIIXBiW8qoJpWy5e7YzgphD5ROSKQk9st2nCsF0pGEWqC0Jpvy4vvcrbhxltt5
      b9m6K85sRCfYUJ27xQeXS7x84ghaa5RSyG38UQ2lDUpFJY7SmlBp6s2QSt2n2gioNnyqLXfd
      pxLb1UZArREQKt0lcNEIYEL4Yr+UAs+VeI4T2a6zst918JyV4lc/xpUSxxE4se1KiSMFjhPb
      MoqTAoQUcVMxLi0faesvUtpkgdoaVGgZcw/3veMUWuv1rQEW7k5RClxSfoVMJoMQAsdxohcO
      j6AJFKm2iQU3qoVawlxrBm2BrTaCjjB32T61ZoAfRKWonyhR0ymXvoxHPpsin0mRz3qRnUkx
      XOwjn/Hoy6bIZTwyKRfPkTiOxI2NI0VkOxJXRmFCbHwHMCrdFegwGu7UCqMb0FzEVMvohVuI
      3BAICXHHu+VGxnZXXOyXrXDZ7lR3StbOb9LGEIYhYRAShgEqDCN/ywRJfxSvVLdAtwy0xzOQ
      bXdLaUGikcZH6ACpmqB8hGoilI/QTYT217cGMEYzfeMaDZNi355d7a/IbEQfoFL3uVOqUKm3
      SuCOXWl0hLjWDPB9RTMIaQYKPwjxQ0U25XYLbmz3ZVPk24LtkcukyKZdsimXTNqL7JS7ZJv4
      1Vl/kW69+FGRMBuNCZuREDcWMM0FTKOMaS5immVMYwGaC3HcIiZsYIIGtGzlQyqPSBei83p5
      jFYYHcZ2NO6f9EfXjsbsBRphDKAjsRcC4gGElkLELXJM247ujInb5ia+S+34VvMFEY1+SQfp
      uEjHxXFcpOsiAKMCCP3YDjBttx/XGi7GuGjjtd1GeICHwdu+7wH+nz95mzc+vEragbQLKUck
      3JB2W35B2pNkPIe058T28nHhjvce4toe2r53PIbE0N5aGITRXbajfVxdx9F1XNWI3Q1c3cBV
      cbhuIFUdgjombER2UMdoRSgzKJkllBlCJ4uSGUKZJXRa4VmUk8G4OUjlwct1TOsdiQGtVNRE
      UAqlFMYYHMfF9Vxc18NxXVzHjW0ninMjwXQcB1c6SK2RSiOUQoQKQoUIQ0wQops+utlE+z6m
      2UQ1fUzT74Q3/ehFW/yeRBiNaSuZAWEQjkCmU4hUBpnKIlIZhBfbqQwilUWm08iUh0zHJuUh
      U25key4i5W5fBZj98VnmTl8AGZUQkS1AysgWsd0Vn0wX2UKI5WFypTBAaAQhoBAoMCGYEGEC
      jAkROsDoAFRkjPJju4lpLkKrdG4uIII6UjXbxlFNhONBqhAZrw+8PoTXB6lCVDqnCohUP8bL
      oUQGJdNomUaJNFp47TesUQXReQHWCY87ilFvN/FGtnMcWiM0CG0QCqQ2CGXQQYj2A7QfYvwQ
      HSpM2yT8gcJojXCdtsCJhNB1hNBFtNxeJ0ymvCi9FxnhObHtIl0nsj03bn49vBxt27HJTKpM
      vziLCfy4CoyEjZYAmiBq55ogFlIFhAgUQqhYmDVCRAZhEu5OuBAa0HEt7mKEA02OYs0AAAum
      SURBVLgYHAwOGAdjHIyRGOOAlmgtMErGYTKuelMoncboHMoMYnQabVIYMpFt0hjhxteJlS9+
      ISfaL+xAiCZIf0m46ByXeKHXfVwirbxHuIgKkLYwei4yleoIcDvcQ6QSgtkWVhfpRUK6mS+z
      HoZtqwApZ4r+0dvgeAgnBU4enFRUijqpRLi3PFx6nXDpxm4PpNdJJ91ut3SXv7pfhXbpqqPS
      lqSAJoXP8kjZtk0gi2U92L6D8xbLOmAVwNLTWAWw9DTbtmF+Y77J7Yr/SPNwv72nptKkHblm
      H1qs5BMrxa117PLABzk+Hm3vrKuBznwaEnNs6LxtN3TuR5c7eVzXOU3HbZbGmxWuv1r4vc/X
      nheUTJvI87ZVAEcKPOdRj6Lc3/VdJ5rIlVh2ci/niph7ejpBK54jIaj30lajDSiNCRUE0Uou
      4Trt9yYinnyW9CdnWLZn/Cfm+3fPxmy5W2sF4mPa7k748nhxj/AlxyXz0poZuuy4FcKFHQV6
      JCRnyHZN0DIarXQ80cssj2v7E8cumRSmle68xfVDdBCgghAdhuggjNx+gPYT4YljlYnm2CSF
      olWGR6u66CwUkiJarth2tybhiCU1R1w6t2dixmV2qyQ2nXQrhbVK/9Y5usPiGavt8NZkueR1
      OmGd60Rm20rlB+++wydnzy6/CV0/OjEev9KNSIQ/6DmSD6MT1po+3P2WtUvglUIbQ3vFVlyi
      RotvOqWeMJ2Srj0rs3VMPK+95ZdCIFwHx+28lJJuvFrNkUjHQbpuZMtoAp7s85AyHfsdvPij
      5lLKRAkf5yDxziIZ1p72kVwx1irxDaANovUeJF6w3vIL0wojdsdhbTfxYvfYHd+n1nuUpN0x
      LAtb0S9bq+3E9lWAocEiE2PDsa/zqr/LnRDkpWHdft0+TbKd3hZCIaI4ElVu7G81LbqXJCZs
      ES1YdKSDK11c4eJKN14y6UZGRksowUTrh4mn+6LatkZFtQAaI01UyjoCHIFwosliwpHxVBAZ
      TxUQ8YS0Vl4SbikTgiQT8XSVrtFPTN7Lzv3ucica2Mlj21MtWBLXVYKbtrB3FsonnltrWkdL
      WeLriK7OQ/dzWwlB9BxRtBV22ypAf6PBgVjQMHH7FEkkip2SszU1t9UCbK0EEslUyTSiO227
      cbls6kHHfa9pCW0jBbhO1LZ2HfBWdkfPLWruJBfM014sb+IJYh1hiXZbiGZq0p6x2XKr7rAw
      GRdPFVFhdLyJZn9K1UA7GTqzOFszOiWdGZ4CRFSbtOPi6dCiPW26pVDRjg4iPgbhROFSdNwi
      VtzkdeSSa8rWdVs1VKsPkOhA0KmpWiVZMm3XMXGabasAA+40A+mPlpfqQPRrZWxE5yHRudnt
      Oe6thydbdsK00zr3sFsPvtsvkv6W0c14bpLqCF6goBrPyzchIp6jL3UnrDNvP+w+Pg43Rieq
      rc704uRDN6170hIG6UbKJ93YOCDSIB2M0dG0j3iqc8eY6NoEsXtJXGs/n7j1310Kd/coWkMy
      YlnYkrTt5xn/AmM6v2PpVOsu9z3ChFwWv20V4Er1Cjdv/ofOTY9Lya5mStsk2sxt/1J3x+7a
      mSG22wvkE82FaLH8kvjEjg6tMIHAtHavMK0ObdykaZul/pXClvvbnc2uB9uxTZefxN1ZTlSj
      hEgn9RBPpiPgK/qNWeJuxa2Vrv0ru55Vsobv9E/EkjTEz5G4ldCRh22rAH37fopiflenyRI/
      3M7eMa0HT9eNInGTYMkxS9Ivq1YTVWfclGylTpTC3VVsks6YdKvd3O0WGGSsxE5yRKRrdCTy
      t9buRvsJLenkk7T1KnHd52grpnQ6bXo6HfuWEHb/jk6cWSGulf+1jmvdg2Q/Y3l4p0/XHvXp
      ur/xI1rSB+hO151gnRXAUCmXqAaCsZHBVcqah+fff/g6b1z6j8vCWz9PPMjF7yfxKkmWRYmV
      PK2HzpIWgVnu7CoJO1arWdEeczHinn4BUd8omcKITtp2+kQakzxb928QXfleniYZspJ7xfSi
      226NNnX2QhLtvZCklAins22NaPXN7pHf7muK+OaJjnzEMeuqAPX523xwborRPsN8dQ+H9o2t
      5+m7ONbcz3AZOvqdLFU6pU2yJEmmTpYs7f9JYbxnuqRgLr12J12yJOvUHAnhbNdY3TWGSNpx
      fLedFJxOOIJETUan9hOdl1ft4b/EMGBneLGTTjpO2whHIltDqS0hdOK0iRdl7WPi4dbWskXH
      aS1l7Ngd4U3UrkllSA5fyoQitPNN4re3b2Y391kAruuLsBvn30WNHGVPQfHmqQu8fPIZYGNe
      hNUrC9QXy0tCW8KxJCxhLWXF8umeN2/liOUVyEoPZKkQi+4HvqJwdwt0dzj3PM+yNJZ7sm37
      ANm+frJ9/Y86G5ZtzroqwPD4BO+dO0dQMAyP7l7PU1ssG8I6zwUyLJZmqfiC8R3D7YaAnQtk
      2arYyXCWnmZDFSA5S3E7bI1ojNk2nUab1/XB1gAJWnuYbtWHlWS73FPY2nndFAWwWLYqW7xd
      Ygj8JvVGk9aOwI16nVBFkxCMMQRBAEAY+NRqNWq1GkGoNj2nWivq9Xp8bUMY+DQazfbLMRUG
      KB3P91Qh9Xod9Yi2jFdhEF8/mlrgNxs0/aCd1zAI2tuIt3/HIyknW8+/0Z760WzU28+3dR9D
      FU3IC/wmjeaDLZPdmvVSzOLsNJ9eu4NUNZziPvLNW8w2HWrVOi+9dJJLZz/m4u15vvrTr7JY
      mmHqbonK7HUYPsqLR/dsXkZ1yPmPThNKj7szZT7/0jHe/OH79OUdCuOHGcs0OXPqxxSPfoUj
      O1P8+EdvkC+OMF/xefnF59qbCG8KYZUPPjhPOu0yX9Mcmyzy4cU7yKDG4RMv4c9e5cNzF/jc
      F3+WnCrx41MXyTqK9Nh+njqwaxMzCrWFGc5euImLj86OMeoscGNR0Vis8OLLL3Lh49MIL8Xd
      +Tqff3aS77/zKQXPZ+yJF9g3mr+va2zpGqAwvJPjzz7NrpEioVJMlxucPPEsk6Npbi+EHD72
      LONDBQAGx3Zx5MiTSKePZw5v8jsI6fLk08c58sRjOEZRmrrEjsMnOfHci8zcukxxbILjRx+P
      Ext8JTlwYH+0pePm5hTcPM+dPMHj+3ejVcjlG9Mcf+4ELz59kIvXb7Nr8gkOTUaCXp6dYWzf
      E5x44Xnmp65tdk7J9Y9y4vgz7BkfJlSKazOLvPDccY7uHeD6bJNjx09w6LFJjAqZuniRQydf
      4rnPvcjUpfP3fY0trQDGaM6+/ybXKx7PPNERakc6KL28mVMv3YL+nWQewWL5yuwUr//gbY49
      /yJSKVzHAVjedDCaXMrl/Cef4uX6uuYfbRbTV87x5ocXeeGFE2BM9KUW10Gp7ns6MrGf2u0L
      fHDqDNUHbFqsB8ZoLnz0Dp/e8Tlx9AAQTTJxXIdQKeamr/L9t07x/IsvoEKD6wjABRPe9zW2
      tALMXDlLMDDJ8SPRj8+7hrvlKlN3Fxjtz8WLwk3bPnvuEocP7d/0fBrt8+7pC3z+i5+nmPMo
      7pjg1pULzN+9TrYwRnuRu9EYVWeuKnnq6FGq83dRm6wAxi9z5toiX3jpOVISxgcLXL45w+Ur
      N5gYH4kX4EdfswHB5BNH2Tvax/jE5KbmE2Bh+jLzcoTnnz6EAAbTkqm5Ra7cmGVnMcWpT27y
      xS+8RD4lGd8zzuULl5m5do7C2IH7vsaWHgWqzN3mkys3ARjdNcnESJ5Pzp9neOIgw30uZ8+c
      oRka3FQfR44cZH5ugZGRwU3Pp9Ehn5w9Q7UZIp0sR585zOL0dW6VFU8e2s/s1BWuT88BMDH5
      BHlR49MrU0w+fpjB+EOCm5ZXv8oHH5/HGMgWhjn0+F6mLn2C7xXZv2cH1y6cYXahATg8fuQw
      s9cv0XT6eHz/ns3tqwD1hRnOXoiaXkM79rBvvMiFT87RN7aPHcUs5z4+TSMEmenn2ScPcvvG
      ZeaDFIcO3H8T+D8BPr32+QpiaosAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='P 21-40' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='P101-106' width='192'>
      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
      4P8PgM/NtnXBkLIAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='P41-60' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='P61-80' width='192'>
      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
      /5KnOtFfD1XAAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='P81-100' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Tea' width='192'>
      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
      PLGS2/6cUXQAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Vegetables' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
